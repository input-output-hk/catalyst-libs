#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This Shows how we run basic checks which will fail in CI to speed up development and
# catch things which will fail immediately sooner.

remote="$1"
url="$2"

# Redirect output to stderr.
exec 1>&2

# Check for Noisy CI Issues before Pushing
if ! just pre-push; then
	echo >&2 "Found CI Issues, not pushing"
	exit 1
fi

exit 0
