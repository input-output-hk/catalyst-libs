{"uid":"a22f7c1ba54603ed","name":"test_proposal_doc::empty_content","historyId":"catalyst-signed-doc::proposal:catalyst-signed-doc::proposal#test_proposal_doc::empty_content","time":{"duration":70},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"running 1 test","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"ProblemReport(State { context: \"Catalyst Signed Document Decoding\", report: Report([Entry { kind: FunctionalValidation { explanation: \"Invalid Document content, cannot get decoded bytes\" }, context: \"Cannot get a document content during the content type field validation\" }, Entry { kind: InvalidValue { field: \"payload\", value: \"\", constraint: \"br\" }, context: \"Document content is not decodable with the expected content-encoding\" }, Entry { kind: FunctionalValidation { explanation: \"Invalid Document content, cannot get decoded bytes\" }, context: \"Document content JSON schema validation\" }, Entry { kind: FunctionalValidation { explanation: \"Document must have a NOT CBOR `nil` content\" }, context: \"Content rule check\" }]) })","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test test_proposal_doc::empty_content ... ok","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 7 filtered out; finished in 0.04s","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"catalyst-signed-doc::proposal"},{"name":"testClass","value":"catalyst-signed-doc::proposal"},{"name":"package","value":"catalyst-signed-doc::proposal"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":5},"items":[{"uid":"ed2ec4d2d1c9f6f7","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/17977611097_1758719562992/#testresult/ed2ec4d2d1c9f6f7","status":"passed","time":{"duration":104}},{"uid":"be1c0f033ab284b2","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/17968286591_1758695567595/#testresult/be1c0f033ab284b2","status":"passed","time":{"duration":81}},{"uid":"54068b4a0416a9f3","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/17947567355_1758634133326/#testresult/54068b4a0416a9f3","status":"passed","time":{"duration":104}},{"uid":"ab447feee5f9bbc6","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/17944197449_1758625948845/#testresult/ab447feee5f9bbc6","status":"passed","time":{"duration":153}}]},"tags":[]},"source":"a22f7c1ba54603ed.json","parameterValues":[]}