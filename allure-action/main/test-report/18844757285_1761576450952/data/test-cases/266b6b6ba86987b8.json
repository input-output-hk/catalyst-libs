{"uid":"266b6b6ba86987b8","name":"test_brand_parameters_doc::empty_content","historyId":"catalyst-signed-doc::brand_parameters:catalyst-signed-doc::brand_parameters#test_brand_parameters_doc::empty_content","time":{"duration":206},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"running 1 test","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"ProblemReport(State { context: \"Catalyst Signed Document Decoding\", report: Report([Entry { kind: FunctionalValidation { explanation: \"Invalid Document content, cannot get decoded bytes\" }, context: \"Cannot get a document content during the content type field validation\" }, Entry { kind: InvalidValue { field: \"payload\", value: \"\", constraint: \"br\" }, context: \"Document content is not decodable with the expected content-encoding\" }, Entry { kind: FunctionalValidation { explanation: \"Invalid Document content, cannot get decoded bytes\" }, context: \"Document content JSON schema validation\" }, Entry { kind: FunctionalValidation { explanation: \"Document must have a NOT CBOR `nil` content\" }, context: \"Content rule check\" }]) })","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"test test_brand_parameters_doc::empty_content ... ok","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 4 filtered out; finished in 0.05s","time":{},"steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":6,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"catalyst-signed-doc::brand_parameters"},{"name":"testClass","value":"catalyst-signed-doc::brand_parameters"},{"name":"package","value":"catalyst-signed-doc::brand_parameters"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":14,"unknown":0,"total":14},"items":[{"uid":"ef5d80bef664a08e","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/18783045202_1761317009790/#testresult/ef5d80bef664a08e","status":"passed","time":{"duration":238}},{"uid":"d8671e0d224d53e7","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/18776539453_1761300952673/#testresult/d8671e0d224d53e7","status":"passed","time":{"duration":140}},{"uid":"a9c4fbd911a693cc","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/18775835727_1761299079562/#testresult/a9c4fbd911a693cc","status":"passed","time":{"duration":205}},{"uid":"4230bc6e919c5775","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/18770917449_1761285452706/#testresult/4230bc6e919c5775","status":"passed","time":{"duration":237}},{"uid":"e31233286927c85","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/18720774276_1761146157792/#testresult/e31233286927c85","status":"passed","time":{"duration":55}},{"uid":"9c6be76738abba9e","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/18711651218_1761125612717/#testresult/9c6be76738abba9e","status":"passed","time":{"duration":66}},{"uid":"df7a4cdb08e654d8","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/18706530714_1761112125716/#testresult/df7a4cdb08e654d8","status":"passed","time":{"duration":141}},{"uid":"cc343cfe892f3aa6","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/18643536019_1760940203022/#testresult/cc343cfe892f3aa6","status":"passed","time":{"duration":67}},{"uid":"4399db2a4f84effb","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/18587171533_1760690358058/#testresult/4399db2a4f84effb","status":"passed","time":{"duration":128}},{"uid":"a4c14abcfee7fdbc","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/18584402301_1760682693894/#testresult/a4c14abcfee7fdbc","status":"passed","time":{"duration":130}},{"uid":"41b0d77f8efda006","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/18549978842_1760588114950/#testresult/41b0d77f8efda006","status":"passed","time":{"duration":185}},{"uid":"a156596141b6a025","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/18495198389_1760442208636/#testresult/a156596141b6a025","status":"passed","time":{"duration":167}},{"uid":"1b0e7b8fa20213b","reportUrl":"https://input-output-hk.github.io/catalyst-libs/allure-action/main/test-report/18404275342_1760093739781/#testresult/1b0e7b8fa20213b","status":"passed","time":{"duration":48}}]},"tags":[]},"source":"266b6b6ba86987b8.json","parameterValues":[]}