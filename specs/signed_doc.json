{
  "authors": {
    "Alex Pozhylenkov": "alex.pozhylenkov@iohk.io",
    "Steven Johnson": "steven.johnson@iohk.io"
  },
  "base_types": {
    "Action": "5e60e623-ad02-4a1b-a1ac-406db978ee48",
    "Brand": "ebcabeeb-5bc5-4f95-91e8-cab8ca724172",
    "Campaign": "5ef32d5d-f240-462c-a7a4-ba4af221fa23",
    "Category": "818938c3-3139-4daa-afe6-974c78488e95",
    "Comment": "b679ded3-0e7c-41ba-89f8-da62a17898ea",
    "Decision": "788ff4c6-d65a-451f-bb33-575fe056b411",
    "ModerationAction": "a5d232b8-5e03-4117-9afd-be32b878fcdd",
    "Proposal": "7808d2ba-d511-40af-84e8-c0d1625fdfdc",
    "SubmissionAction": "78927329-cfd9-4ea1-9c71-0e019b126a65",
    "Template": "0ce8ab38-9258-4fbc-a62e-7faa6e58318f"
  },
  "cddlDefinitions": {
    "COSE_Document_Header_Map": {
      "comment": "COSE Document Header Map",
      "def": "{\n  COSE_Document_Standard_Headers,\n  Signed_Document_Metadata_Headers,\n  COSE_Generic_Headers\n}",
      "requires": [
        "COSE_Document_Standard_Headers",
        "Signed_Document_Metadata_Headers",
        "COSE_Generic_Headers"
      ]
    },
    "COSE_Document_Headers": {
      "comment": "COSE Document headers (only protected headers are used)",
      "def": "(\n  protected   : bstr .cbor COSE_Document_Header_Map,\n  unprotected : { COSE_Generic_Headers } ; Unused and ignored\n)",
      "requires": [
        "COSE_Document_Header_Map",
        "COSE_Generic_Headers"
      ]
    },
    "COSE_Document_Standard_Headers": {
      "comment": "COSE Standard headers used by a Document",
      "def": "(\n\t? 1 => int / tstr,  ; algorithm identifier\n\t? 2 => [+COSE_label],    ; criticality\n\t? 3 => tstr / int,  ; content type\n\t? 4 => bstr,        ; key identifier\n\t? ( 5 => bstr //    ; IV\n\t\t6 => bstr )     ; Partial IV\n)\t\t",
      "requires": [
        "COSE_label"
      ]
    },
    "COSE_Generic_Headers": {
      "comment": "Generic Header definition",
      "def": "( * COSE_label => COSE_values )",
      "requires": [
        "COSE_label",
        "COSE_values"
      ]
    },
    "COSE_Sign": {
      "comment": "COSE-SIGN data object",
      "def": "[\n  COSE_Document_Headers,\n  payload : bstr / nil,\n  signatures : [+ COSE_Signature]\n]\t\t",
      "requires": [
        "COSE_Document_Headers",
        "COSE_Signature"
      ]
    },
    "COSE_Signature": {
      "comment": "An Individual Document Signature",
      "def": "[\n  COSE_Signature_Headers,\n  signature : bstr\n]",
      "requires": [
        "COSE_Signature_Headers"
      ]
    },
    "COSE_Signature_Header_Map": {
      "comment": "COSE Signature Header Map",
      "def": "{\n  COSE_Signature_Standard_Headers,\n  COSE_Generic_Headers\n}",
      "requires": [
        "COSE_Signature_Standard_Headers",
        "COSE_Generic_Headers"
      ]
    },
    "COSE_Signature_Headers": {
      "comment": "COSE Signature headers (only protected headers are used)",
      "def": "(\n  protected   : bstr .cbor COSE_Signature_Header_Map,\n  unprotected : { COSE_Generic_Headers } ; Unused and ignored\n)",
      "requires": [
        "COSE_Signature_Header_Map",
        "COSE_Generic_Headers"
      ]
    },
    "COSE_Signature_Standard_Headers": {
      "comment": "COSE Signature headers",
      "def": "(\n\t? 1 => int / tstr,  ; algorithm identifier\n\t? 2 => [+COSE_label],    ; criticality\n\t? 3 => tstr / int,  ; content type\n\t? 4 => bstr,        ; key identifier\n\t? ( 5 => bstr //    ; IV\n\t\t6 => bstr )     ; Partial IV\n),\nCOSE_Generic_Headers\n",
      "requires": [
        "COSE_label",
        "COSE_Generic_Headers"
      ]
    },
    "COSE_label": {
      "comment": "COSE Map Generic Label",
      "def": "int / tstr",
      "requires": []
    },
    "COSE_values": {
      "comment": "COSE Map Generic Value",
      "def": "any",
      "requires": []
    },
    "Signed_Document_Metadata_Headers": {
      "comment": "Generic definition (does not include metadata constraints)",
      "def": "COSE_Generic_Headers",
      "requires": [
        "COSE_Generic_Headers"
      ]
    },
    "blake2b_256": {
      "comment": "Blake2B-256",
      "def": "bytes .size 32",
      "description": "Blake2b Hash (256 bits)",
      "requires": []
    },
    "catalyst_id_kid": {
      "comment": "UTF8 Catalyst ID URI encoded as a bytes string.",
      "def": "bytes",
      "requires": []
    },
    "cid": {
      "comment": "IPLD content identifier\nTODO: add size limits if possible",
      "def": "#6.42(bytes)",
      "description": "IPLD content identifier.\nAlso known as an IPFS CID\nSee: https://docs.ipfs.tech/concepts/content-addressing/#what-is-a-cid\n     https://github.com/ipld/cid-cbor/",
      "requires": []
    },
    "collaborators": {
      "comment": "Allowed Collaborators on the next subsequent version of a document.",
      "def": "[ * catalyst_id_kid ]",
      "requires": [
        "catalyst_id_kid"
      ]
    },
    "document_id": {
      "comment": "Document ID",
      "def": "uuid_v7",
      "description": "Unique Document Identifier",
      "requires": [
        "uuid_v7"
      ]
    },
    "document_locator": {
      "comment": "Where a document can be located, must be a unique identifier.",
      "def": "{ \n  \"cid\" => cid\n}",
      "requires": [
        "cid"
      ]
    },
    "document_ref": {
      "comment": "Reference to another Signed Document",
      "def": "[ 1* [\n  document_id, \n  document_ver, \n  document_locator\n] ]",
      "requires": [
        "document_id",
        "document_ver",
        "document_locator"
      ]
    },
    "document_type": {
      "comment": "Document Type",
      "def": "[ 1* uuid_v4 ]",
      "description": "Unique Document Type Identifier",
      "requires": [
        "uuid_v4"
      ]
    },
    "document_ver": {
      "comment": "Document Version",
      "def": "uuid_v7",
      "description": "Unique Chronological Document Version Identifier",
      "requires": [
        "uuid_v7"
      ]
    },
    "http_content_encoding": {
      "comment": "Supported Content Encoding Types",
      "def": "tstr .eq \"br\"",
      "requires": []
    },
    "json_pointer": {
      "comment": "RFC6901 Standard JSON Pointer",
      "def": "text",
      "requires": []
    },
    "media_type": {
      "comment": "Supported Content Media Types.\nIf uint is used, only CoAP Content Formats that match the string format are allowed.",
      "def": "(\n    (uint .eq (50 / 60)) / \n    (tstr .eq (\n        \"application/json\" /\n        \"application/schema+json\" /\n        \"application/cbor\" /\n        \"application/cddl\"\n    ))\n)",
      "requires": []
    },
    "revocations": {
      "comment": "List of revoked versions of this document.",
      "def": "[ * document_ver ] / true ",
      "requires": [
        "document_ver"
      ]
    },
    "section_ref": {
      "comment": "Reference to a section in a referenced document.",
      "def": "json_pointer",
      "requires": [
        "json_pointer"
      ]
    },
    "signed_document": {
      "comment": "Catalyst Signed Document data object.",
      "def": "COSE_Sign",
      "description": "Catalyst Signed Document.\n\nA specific implementation of a COSE-SIGN data objects\nused by the Catalyst project to encapsulate and authenticate\ndocuments used within the system.\n\nSee: https://datatracker.ietf.org/doc/html/rfc9052#name-signing-with-one-or-more-si",
      "requires": [
        "COSE_Sign"
      ]
    },
    "uuid_v4": {
      "comment": "UUIDv4",
      "def": "#6.37(bytes .size 16)",
      "description": "Version 4 UUID\nSee: https://www.rfc-editor.org/rfc/rfc9562.html#name-uuid-version-4\n     https://github.com/lucas-clemente/cbor-specs/blob/master/uuid.md",
      "requires": []
    },
    "uuid_v7": {
      "comment": "UUIDv7",
      "def": "#6.37(bytes .size 16)",
      "description": "Version 7 UUID\nSee: https://www.rfc-editor.org/rfc/rfc9562.html#name-uuid-version-7\n     https://github.com/lucas-clemente/cbor-specs/blob/master/uuid.md",
      "requires": []
    }
  },
  "contentTypes": {
    "application/cbor": {
      "coap_type": 60,
      "description": "RFC8949 Binary CBOR Encoded Document"
    },
    "application/cddl": {
      "description": "CDDL Document; Note: \n* This is an unofficial media type\n* RFC9165 Additional Control Operators for CDDL are supported.  \n* Must not have Modules, schema must be self-contained."
    },
    "application/json": {
      "coap_type": 50,
      "description": "JSON Document"
    },
    "application/schema+json": {
      "description": "JSON Schema Draft 7 Document; Note: \n* This is currently an unofficial media type.\n* Draft 7 is used because of its wide support by tooling."
    }
  },
  "copyright": {
    "copyright": "IOG Singapore, All Rights Reserved",
    "created": "2024-12-27",
    "license": "CC-BY-4.0",
    "versions": [
      {
        "changes": "* First Published Version",
        "modified": "2025-04-04",
        "version": "0.01"
      },
      {
        "changes": "* Add version control changelogs to the specification.",
        "modified": "2025-04-09",
        "version": "0.02"
      },
      {
        "changes": "* Use generalized parameters.",
        "modified": "2025-05-05",
        "version": "0.03"
      },
      {
        "changes": "* Improve and make document serialization more repeatable, and stricter.\n* TODO: Define Systems parameters\n* TODO: Define DReps documents.\n* TODO: Define Proposer Profiles.\n* TODO: Define Role 0 Profile.",
        "modified": "2025-05-30",
        "version": "0.04"
      }
    ]
  },
  "coseHeaderFormats": {
    "Catalyst ID": {
      "cddl": "catalyst_id_kid",
      "description": "KID (Catalyst ID URI)"
    },
    "HTTP Content Encoding": {
      "cddl": "http_content_encoding",
      "description": "Encoding if any on the payload."
    },
    "Media Type": {
      "cddl": "media_type",
      "description": "A Media Type string which identifies the payload."
    }
  },
  "cose_headers": {
    "content type": {
      "coseLabel": 3,
      "description": "Media Type/s allowed in the Payload",
      "format": "Media Type",
      "required": "yes",
      "value": [
        "application/json",
        "application/schema+json",
        "application/cbor",
        "application/cddl"
      ]
    },
    "content-encoding": {
      "coseLabel": "content-encoding",
      "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
      "format": "HTTP Content Encoding",
      "required": "optional",
      "value": [
        "br"
      ]
    }
  },
  "cose_headers_order": [
    "content type",
    "content-encoding"
  ],
  "cose_signature_headers": {
    "kid": {
      "coseLabel": 4,
      "description": "Catalyst ID URI identifying the Public Key.\n\nThe `kid` is a UTF-8 encoded Catalyst ID URI.\nAny `kid` URI which conforms to the Catalyst ID specification may be used.\nThe Catalyst ID unambiguously defines both the signing keys and signing algorithm\nused to sign the protected portion of the document.\t\t\t",
      "format": "Catalyst ID",
      "required": "yes"
    }
  },
  "doc_clusters": {
    "System Parameters": {
      "docs": [
        "Brand Parameters",
        "Campaign Parameters",
        "Category Parameters"
      ]
    }
  },
  "docs": {
    "Brand Parameters": {
      "authors": {},
      "description": "Parameters which define this brand within the system.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "exclusive": null,
          "format": "Collaborators Reference List",
          "required": "optional",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "exclusive": null,
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "optional",
          "type": "Brand Parameters",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "exclusive": null,
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "exclusive": null,
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "exclusive": null,
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
          "exclusive": null,
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "Payload for Brand Parameters document.",
        "examples": [
          {
            "description": "This document indicates the linked proposal is final and requested to proceed for further consideration.",
            "example": {},
            "title": "Final Proposal Submission"
          }
        ],
        "schema": {}
      },
      "signers": {
        "roles": {
          "user": [
            "Registered"
          ]
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "ebcabeeb-5bc5-4f95-91e8-cab8ca724172"
      ],
      "versions": [
        {
          "changes": "\t* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        }
      ]
    },
    "Campaign Parameters": {
      "authors": {},
      "description": "Parameters which define a Campaign within a Brand in the system.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "exclusive": null,
          "format": "Collaborators Reference List",
          "required": "optional",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "exclusive": null,
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Campaign Parameters",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "exclusive": null,
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "exclusive": null,
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "exclusive": null,
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
          "exclusive": null,
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "Payload for Campaign Parameters document.",
        "examples": [
          {
            "description": "This document indicates the linked proposal is final and requested to proceed for further consideration.",
            "example": {},
            "title": "Final Proposal Submission"
          }
        ],
        "schema": {}
      },
      "signers": {
        "roles": {
          "user": [
            "Registered"
          ]
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "5ef32d5d-f240-462c-a7a4-ba4af221fa23"
      ],
      "versions": [
        {
          "changes": "\t* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "\t* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        }
      ]
    },
    "Category Parameters": {
      "authors": {},
      "description": "Parameters which define a Category within a Campaign under a Brand in the system.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "exclusive": null,
          "format": "Collaborators Reference List",
          "required": "optional",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "exclusive": null,
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Campaign Parameters",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "exclusive": null,
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "exclusive": null,
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "exclusive": null,
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
          "exclusive": null,
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "Payload for Category Parameters document.",
        "examples": [
          {
            "description": "This document indicates the linked proposal is final and requested to proceed for further consideration.",
            "example": {},
            "title": "Final Proposal Submission"
          }
        ],
        "schema": {}
      },
      "signers": {
        "roles": {
          "user": [
            "Registered"
          ]
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "818938c3-3139-4daa-afe6-974c78488e95"
      ],
      "versions": [
        {
          "changes": "\t* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "\t* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        }
      ]
    },
    "Comment Moderation Action": {
      "authors": {},
      "description": "A Moderation Action performed on any Comment.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "exclusive": null,
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "exclusive": null,
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": [
            "Proposal Comment"
          ],
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "exclusive": null,
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "exclusive": null,
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "exclusive": null,
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
          "exclusive": null,
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "signers": {
        "roles": {
          "user": [
            "Registered"
          ]
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "5e60e623-ad02-4a1b-a1ac-406db978ee48",
        "b679ded3-0e7c-41ba-89f8-da62a17898ea",
        "a5d232b8-5e03-4117-9afd-be32b878fcdd"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        }
      ]
    },
    "Decision Parameters": {
      "authors": {},
      "description": "\tParameters which define an individual voting event.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "exclusive": null,
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "exclusive": null,
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Decision Parameters",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "exclusive": null,
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "exclusive": null,
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "exclusive": null,
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
          "exclusive": null,
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "Payload for Decision Parameters document.",
        "examples": [
          {
            "description": "This document indicates the linked proposal is final and requested to proceed for further consideration.",
            "example": {},
            "title": "Final Proposal Submission"
          }
        ],
        "schema": {}
      },
      "signers": {
        "roles": {
          "user": [
            "Registered"
          ]
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "788ff4c6-d65a-451f-bb33-575fe056b411"
      ],
      "versions": [
        {
          "changes": "\t* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "\t* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        },
        {
          "changes": "\t* Added brand reference to decision parameters.",
          "modified": "2025-06-06",
          "version": "0.04"
        }
      ]
    },
    "Proposal": {
      "authors": {
        "Steven Johnson": "steven.johnson@iohk.io"
      },
      "business_logic": {
        "back_end": "Before accepting a new proposal to be published, the backend will ensure:\n\n* The document has been signed by a valid author or collaborator.\n* That the signer of the document was a registered proposer\n* That the document was signed with their proposers key\n* That all listed `collaborators` are registered as proposers.\n* That the document has been signed validly according to the [validation](#validation) rules.",
        "front_end": "As validity of the documents is currently enforced by the backend, \nthe front end does not need to validate the document has been signed\ncorrectly.\nIt may do so, but it is not required."
      },
      "description": "A Proposal is a document which describes a proposed solution or project to\naddress the criteria of a category within a campaign.\n\nThe proposal itself is a draft document, it is not submitted for consideration\nunless a `Proposal Submission Action` is submitted which references it.\n\nProposals themselves are intentionally general, however they may be\nlinked to a brand/campaign or category via the template used by the proposal.\n\nThe payload of a proposal is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "exclusive": null,
          "format": "Collaborators Reference List",
          "required": "optional",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "exclusive": null,
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": [
            "template"
          ],
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "exclusive": null,
          "format": "Version Revocations",
          "required": "optional",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "exclusive": null,
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Proposal Template",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "exclusive": null,
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
          "exclusive": null,
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "Proposal Document drafted for submission to a category of a campaign.\n\nMust be valid according to the schema contained within the \n`Document Reference` from the `template` metadata."
      },
      "signers": {
        "roles": {
          "user": [
            "Proposer"
          ]
        },
        "update": {
          "author": true,
          "collaborators": true
        }
      },
      "type": [
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc"
      ],
      "validation": "The first version of a Proposal *MUST* be signed by the original author.\nIt may optionally be co-signed by any of the listed `collaborators`.\nIt may not be signed by anyone else.\n\nSubsequent Versions can be signed/co-signed by either the Original Author of the first version,\nOR any of the listed `collaborators` in the immediately previous version.\nThis allows any collaborator to update the next version of a document, provided they are still a collaborator.\nIt is valid for a proposal to be signed by a collaborator \nwho is no longer listed as in the `collaborators`\nof the document they are signing, provided they are listed as a collaborator in the immediately previous document version.\nThis allows for a collaborator to make an update to the document which removes themselves\nfrom the `collaborators` list.\n\nAll versions of the document *MUST* list the author as the original author.\nThe Author can not be changed by any document revision.",
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        }
      ]
    },
    "Proposal Comment": {
      "authors": {},
      "business_logic": {
        "back_end": "The backend will only validate the document being referenced exists, \nand the integrity of the `ref` and `reply` metadata fields is correct.",
        "front_end": "Comments are valid for any version of the document, however\nas comments refer to a specific version of a document, they may\nlose context when displayed against the latest version of a document.\nIn these cases, the front end should clearly show that a comment was on\na different version of the document.\n\nIf the front end posts a reply to another comment: \n\n* it should reference the comment being replied to in the `reply` field. \n* The `ref` field must refer to the same document, but can be a different version."
      },
      "description": "A Proposal Comment is a document which comments on a referenced Proposal document.\n\nProposal Comments themselves are intentionally general, however they may be\nlinked to a brand/campaign or category via the template used by the proposal.\n\nThe payload of a proposal comment is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "exclusive": null,
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "exclusive": null,
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": [
            "ref",
            "template"
          ],
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Proposal",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "optional",
          "type": "Proposal Comment",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "exclusive": null,
          "format": "Version Revocations",
          "required": "optional",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "exclusive": null,
          "format": "Section Reference",
          "required": "optional",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Proposal Comment Template",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "exclusive": null,
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
          "exclusive": null,
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Document which must validate against the referenced template."
      },
      "signers": {
        "roles": {
          "user": [
            "Registered"
          ]
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "b679ded3-0e7c-41ba-89f8-da62a17898ea",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc"
      ],
      "validation": "A comment which is a reply *MUST* reference the same document.\nIt may reference a different version of the document.",
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        }
      ]
    },
    "Proposal Comment Meta Template": {
      "authors": {},
      "description": "## Proposal Comment Meta Template Document\n\nA Proposal Comment Meta Template is used to enforce functional requirements\nare met in any Proposal Comment Template.\n\nThe payload of a proposal comment template is controlled by its meta template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "exclusive": null,
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "exclusive": null,
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "exclusive": null,
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "exclusive": null,
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "exclusive": null,
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
          "exclusive": null,
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Schema document which ensures the minimum required functional requirements\nof the Proposal Comment Template are met.\n\nThis ensures that payloads can be reliably interpreted by business logic processes, \nwhile allowing for flexibility to capture extended information.",
        "schema": "https://json-schema.org/draft-07/schema"
      },
      "signers": {
        "roles": {
          "admin": [
            "Root Admin",
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "b679ded3-0e7c-41ba-89f8-da62a17898ea",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        }
      ]
    },
    "Proposal Comment Template": {
      "authors": {},
      "description": "## Proposal Comment Template Document\n\nA Proposal Comment Template defines the allowed payload contents of a\nlinked proposal comment.\n\nProposal comments themselves are intentionally general, however they may be\nlinked to a brand/campaign or category via the template used by the proposal.\n\nThe payload of a proposal comment is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "exclusive": null,
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "exclusive": null,
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "exclusive": null,
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "exclusive": null,
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "optional",
          "type": "Proposal Comment Meta Template",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "exclusive": null,
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
          "exclusive": null,
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Schema document which defines the content of the Proposal Comments."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin",
            "Campaign Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "b679ded3-0e7c-41ba-89f8-da62a17898ea",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        }
      ]
    },
    "Proposal Meta Template": {
      "authors": {},
      "description": "## Proposal Meta Template Document\n\nA Proposal Meta Template is used to enforce functional requirements\nare met in any Proposal Template.\n\nThe payload of a proposal template is controlled by its meta template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "exclusive": null,
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "exclusive": null,
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "exclusive": null,
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "exclusive": null,
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "exclusive": null,
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
          "exclusive": null,
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Schema document which ensures the minimum required functional requirements\nof the Proposal Template are met.\n\nThis ensures that payloads can be reliably interpreted by business logic processes, \nwhile allowing for flexibility to capture extended information.",
        "schema": "https://json-schema.org/draft-07/schema"
      },
      "signers": {
        "roles": {
          "admin": [
            "Root Admin",
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        }
      ]
    },
    "Proposal Moderation Action": {
      "authors": {},
      "description": "A Moderation action performed on a Proposal.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "exclusive": null,
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "exclusive": null,
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Proposal",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "exclusive": null,
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "exclusive": null,
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "exclusive": null,
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
          "exclusive": null,
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "signers": {
        "roles": {
          "user": [
            "Registered"
          ]
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "5e60e623-ad02-4a1b-a1ac-406db978ee48",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc",
        "a5d232b8-5e03-4117-9afd-be32b878fcdd"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        }
      ]
    },
    "Proposal Submission Action": {
      "authors": {},
      "business_logic": {
        "back_end": "A Submitted proposal with collaborators *MUST* have \na `final` submission by *ALL* listed `collaborators`.\nIf any `collaborator` has not submitted a `final` submission by the deadline, then the proposal \nis not considered `final` and will not be considered in the category it was being submitted to.",
        "front_end": "A proposal with `collaborators` will not be shown as having a confirmed collaborator,\nunless there exists a `draft` or `final` proposal submission from that collaborator.\n\nAny document that lists a collaborator should be highlighted to that collaborator so\nthey can take appropriate action, such as:\n\n* Confirm they are a collaborator by submitting this document as `draft`\n* Agree to being a collaborator on the final submission by submitting this document as `final`\n* Hide themselves from the collaborators list but do not remove themselves by submitting `hide`\n* Remove themselves permanently as a collaborator by publishing a new version with them removed.\n\nTo eliminate the necessity for collaborators to accept collaboration on every version, \nthey will be considered as agreeing to be a collaborator on any version of the document\nthat lists them, if their latest submission is `draft` or `final`.\n\nIf their latest submission on a document is `hide` they should be considered to not\nhave agreed to be a collaborator.\n\n*NOTE* `final` status ONLY applies to the exactly referenced document and version."
      },
      "description": "## Proposal Submission Action\n\nA Proposal Submission Action is a document which can attempt to either submit a \nparticular version of a proposal into a campaign, or withdraw it.\n\nThe last action on the document ts the action which takes effect at the deadline.\n\nFor multiple collaborators, multiple submission actions can be posted independently, \nbut none of them will take effect until ALL collaborators have posted equivalent actions.\n\nFor example, three collaborators Alice/Bob/Claire can each post one submission action\nfor the same document.  \nUnless they all submit the same version of the proposal\nthe proposal will not be seen as submitted.\n\nThe payload is a fixed format.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "exclusive": null,
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "exclusive": null,
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": [
            "ref"
          ],
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": true,
          "required": "yes",
          "type": "Proposal",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "exclusive": null,
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "exclusive": null,
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "exclusive": null,
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
          "exclusive": null,
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "The kind of action is controlled by this payload.\nThe Payload is a JSON Document, and must conform to this schema.\n\nStates:\n\n* `final` : All collaborators must publish a `final` status for the proposal to be `final`.\n* `draft` : Reverses the previous `final` state for a signer and accepts collaborator status to a document.  \n* `hide`  : Requests the proposal be hidden (not final, but a hidden draft).  \n\t\t\t`hide` is only actioned if sent by the author, \n\t\t\tfor a collaborator it identified that they do not wish to be listed as a `collaborator`.",
        "examples": [
          {
            "description": "This document indicates the linked proposal is final and requested to proceed for further consideration.",
            "example": {
              "action": "final"
            },
            "title": "Final Proposal Submission"
          },
          {
            "description": "This document indicates the linked proposal is no longer final and should not proceed for further consideration.\nIt is also used by collaborators to accept that they are a collaborator on a document.",
            "example": {
              "action": "draft"
            },
            "title": "Draft Proposal Submission"
          },
          {
            "description": "If submitted by the proposal author the document is hidden, it is still public but not shown as\na proposal being drafted.\nIf submitted by a collaborator, that collaborator is declaring they do not wish to be listed as\na collaborator on the proposal.",
            "example": {
              "action": "hide"
            },
            "title": "Hidden Proposal Submission"
          }
        ],
        "schema": {
          "$id": "https://raw.githubusercontent.com/input-output-hk/catalyst-libs/refs/heads/main/specs/signed_docs/docs/payload_schemas/proposal_submission_action.schema.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "definitions": {
            "action": {
              "description": "The action being performed on the Proposal.",
              "enum": [
                "final",
                "draft",
                "hide"
              ],
              "type": "string"
            }
          },
          "description": "Structure of the payload of a Proposal Submission Action.",
          "maintainers": [
            {
              "name": "Catalyst Team",
              "url": "https://projectcatalyst.io/"
            }
          ],
          "properties": {
            "action": {
              "$ref": "#/definitions/action"
            }
          },
          "required": [
            "action"
          ],
          "title": "Proposal Submission Action Payload Schema",
          "type": "object",
          "x-changelog": {
            "2025-03-01": [
              "First Version Created."
            ]
          }
        }
      },
      "signers": {
        "referenced": true,
        "roles": {
          "user": [
            "Proposer"
          ]
        },
        "update": {
          "author": true,
          "collaborators": true
        }
      },
      "type": [
        "5e60e623-ad02-4a1b-a1ac-406db978ee48",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc",
        "78927329-cfd9-4ea1-9c71-0e019b126a65"
      ],
      "validation": "No validation is required beyond as defined by:\n\n* [metadata](#metadata) \n* [payload](#payload)\n* [signers](#signers)",
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        }
      ]
    },
    "Proposal Template": {
      "authors": {},
      "description": "## Proposal Template Document\n\nA Proposal Template defines the allowed payload contents of a\nlinked proposal.\n\nProposals themselves are intentionally general, however they may be\nlinked to a brand/campaign or category via the template used by the proposal.\n\nThe payload of a proposal is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "exclusive": null,
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "exclusive": null,
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": [
            "template"
          ],
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "exclusive": null,
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "exclusive": null,
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "exclusive": null,
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "exclusive": null,
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "optional",
          "type": "Proposal Meta Template",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "exclusive": null,
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
          "exclusive": null,
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Schema document which defines the valid contents of a proposal document."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin",
            "Campaign Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        }
      ]
    }
  },
  "documentationLinks": {
    "CBOR-LFD-ENCODING": "https://www.rfc-editor.org/rfc/rfc8949.html#section-4.2.3",
    "CBOR-TAG-37": "https://github.com/lucas-clemente/cbor-specs/blob/master/uuid.md",
    "CBOR-TAG-42": "https://github.com/ipld/cid-cbor/",
    "CC-BY-4.0": "https://creativecommons.org/licenses/by/4.0/legalcode",
    "IPFS-CID": "https://docs.ipfs.tech/concepts/content-addressing/#what-is-a-cid",
    "JSON Schema": "https://json-schema.org/draft-07",
    "RFC3629": "https://datatracker.ietf.org/doc/html/rfc3629",
    "RFC3986": "https://datatracker.ietf.org/doc/html/rfc3986",
    "RFC7932": "https://www.rfc-editor.org/rfc/rfc7932",
    "RFC8259": "https://www.rfc-editor.org/rfc/rfc8259.html",
    "RFC8610": "https://www.rfc-editor.org/rfc/rfc8610",
    "RFC8949": "https://www.rfc-editor.org/rfc/rfc8949.html",
    "RFC9052": "https://datatracker.ietf.org/doc/html/rfc9052",
    "RFC9052-CoseSign": "https://datatracker.ietf.org/doc/html/rfc9052#name-signing-with-one-or-more-si",
    "RFC9052-HeaderParameters": "https://www.rfc-editor.org/rfc/rfc8152#section-3.1",
    "RFC9165": "https://www.rfc-editor.org/rfc/rfc9165",
    "RFC9562": "https://www.rfc-editor.org/rfc/rfc9562.html",
    "RFC9562-V4": "https://www.rfc-editor.org/rfc/rfc9562.html#name-uuid-version-4",
    "RFC9562-V7": "https://www.rfc-editor.org/rfc/rfc9562.html#name-uuid-version-7",
    "application/cbor": "https://www.iana.org/assignments/media-types/application/cbor",
    "application/json": "https://www.iana.org/assignments/media-types/application/json",
    "application/schema+json": "https://datatracker.ietf.org/doc/draft-bhutton-json-schema/",
    "br": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding#br"
  },
  "encodingTypes": {
    "br": {
      "description": "BROTLI Compression"
    }
  },
  "linkAKA": {
    "BROTLI": "RFC7932",
    "CBOR": "RFC8949",
    "CBOR Deterministic Encoding": "CBOR-LFD-ENCODING",
    "CBOR Encoded IPLD Content Identifier": "CBOR-TAG-42",
    "CDDL": "RFC8610",
    "COSE": "RFC9052",
    "COSE Header Parameters": "RFC9052-HeaderParameters",
    "COSE Sign": "RFC9052-CoseSign",
    "IPFS CID": "IPFS-CID",
    "JSON": "RFC8259",
    "RFC9165 - CDDL Additional Controls": "RFC9165",
    "URI": "RFC3986",
    "UTF-8": "RFC3629",
    "UUID": "RFC9562",
    "UUIDv4": "RFC9562-V4",
    "UUIDv7": "RFC9562-V7"
  },
  "metadata": {
    "collaborators": {
      "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
      "exclusive": null,
      "format": "Collaborators Reference List",
      "required": "optional",
      "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
    },
    "id": {
      "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
      "exclusive": null,
      "format": "Document Id",
      "required": "yes",
      "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
    },
    "parameters": {
      "description": "A reference to the Parameters Document this document lies under.",
      "exclusive": null,
      "format": "Document Reference",
      "linked_refs": null,
      "multiple": false,
      "required": "optional",
      "type": [
        "Brand Parameters",
        "Campaign Parameters",
        "Category Parameters",
        "Decision Parameters"
      ],
      "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document."
    },
    "ref": {
      "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
      "exclusive": null,
      "format": "Document Reference",
      "linked_refs": null,
      "multiple": false,
      "required": "optional",
      "type": [
        "Proposal Meta Template",
        "Proposal Template",
        "Proposal",
        "Proposal Comment Meta Template",
        "Proposal Comment Template",
        "Proposal Comment",
        "Proposal Submission Action",
        "Proposal Moderation Action",
        "Comment Moderation Action",
        "Brand Parameters",
        "Campaign Parameters",
        "Category Parameters",
        "Decision Parameters"
      ],
      "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
    },
    "reply": {
      "description": "Reference to a Comment document type being referred to.",
      "exclusive": null,
      "format": "Document Reference",
      "linked_refs": null,
      "multiple": false,
      "required": "optional",
      "type": [
        "Proposal Comment"
      ],
      "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
    },
    "revocations": {
      "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
      "exclusive": null,
      "format": "Version Revocations",
      "required": "excluded",
      "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
    },
    "section": {
      "description": "A Reference to the original document, or the comment being replied to.",
      "exclusive": null,
      "format": "Section Reference",
      "required": "optional",
      "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
    },
    "template": {
      "description": "Reference to the template used to create and/or validate this document.",
      "exclusive": null,
      "format": "Document Reference",
      "linked_refs": null,
      "multiple": false,
      "required": "optional",
      "type": [
        "Proposal Meta Template",
        "Proposal Template",
        "Proposal Comment Meta Template",
        "Proposal Comment Template"
      ],
      "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
    },
    "type": {
      "description": "The document TYPE.",
      "exclusive": null,
      "format": "Document Type",
      "required": "yes",
      "validation": "**MUST** be a known document type."
    },
    "ver": {
      "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`",
      "exclusive": null,
      "format": "Document Ver",
      "required": "yes",
      "validation": "The document version must always be >= the document ID."
    }
  },
  "metadataFormats": {
    "Collaborators Reference List": {
      "cddl": "collaborators",
      "description": "A list of collaborators who can participate in drafting and submitting a document"
    },
    "Document Id": {
      "cddl": "document_id",
      "description": "A unique document identifier"
    },
    "Document Reference": {
      "cddl": "document_ref",
      "description": "A document reference identifier"
    },
    "Document Type": {
      "cddl": "document_type",
      "description": "A document type identifier"
    },
    "Document Ver": {
      "cddl": "document_ver",
      "description": "A unique chronological document version"
    },
    "Section Reference": {
      "cddl": "section_ref",
      "description": "A document section reference identifier"
    },
    "UUIDv4": {
      "cddl": "uuid_v4",
      "description": "Version 4 formatted UUID"
    },
    "UUIDv7": {
      "cddl": "uuid_v7",
      "description": "Version 7 formatted UUID"
    },
    "Version Revocations": {
      "cddl": "revocations",
      "description": "A list of all versions of this document which are 'revoked'."
    }
  },
  "metadata_order": [
    "type",
    "id",
    "ver",
    "ref",
    "template",
    "reply",
    "section",
    "collaborators",
    "revocations",
    "parameters"
  ]
}
