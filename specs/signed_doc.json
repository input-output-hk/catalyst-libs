{
  "authors": {
    "Alex Pozhylenkov": "alex.pozhylenkov@iohk.io",
    "Steven Johnson": "steven.johnson@iohk.io"
  },
  "base_types": {
    "Action": "5e60e623-ad02-4a1b-a1ac-406db978ee48",
    "Brand": "ebcabeeb-5bc5-4f95-91e8-cab8ca724172",
    "Campaign": "5ef32d5d-f240-462c-a7a4-ba4af221fa23",
    "Category": "818938c3-3139-4daa-afe6-974c78488e95",
    "Comment": "b679ded3-0e7c-41ba-89f8-da62a17898ea",
    "Contest": "788ff4c6-d65a-451f-bb33-575fe056b411",
    "Delegation": "764f17fb-cc50-4979-b14a-b213dbac5994",
    "FormTemplate": "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
    "ModerationAction": "a5d232b8-5e03-4117-9afd-be32b878fcdd",
    "Nomination": "bf9abd97-5d1f-4429-8e80-740fea371a9c",
    "Parameters": "60185874-7e13-407c-a06c-238ffe637ae6",
    "PresentationTemplate": "cb99b9bd-681a-49d8-9836-89107c02e8ef",
    "Profile": "0f2c86a2-ffda-40b0-ad38-23709e1c10b3",
    "Proposal": "7808d2ba-d511-40af-84e8-c0d1625fdfdc",
    "RegisteredProposer": "7311c63b-95c6-402e-a258-f9bf622093eb",
    "RegisteredRep": "94579df1-a6dc-433b-a8e8-910c5dc2f0e3",
    "RegisteredUser": "ff4b7724-3db5-44cd-a433-78ba6d29505e",
    "SubmissionAction": "78927329-cfd9-4ea1-9c71-0e019b126a65"
  },
  "cddlDefinitions": {
    "COSE_Document_Header_Map": {
      "comment": "COSE Document Header Map",
      "def": "{\n  COSE_Document_Standard_Headers,\n  Signed_Document_Metadata_Headers,\n  COSE_Generic_Headers\n}",
      "requires": [
        "COSE_Document_Standard_Headers",
        "Signed_Document_Metadata_Headers",
        "COSE_Generic_Headers"
      ]
    },
    "COSE_Document_Headers": {
      "comment": "COSE Document headers (only protected headers are used)",
      "def": "(\n  protected   : bstr .cbor COSE_Document_Header_Map,\n  unprotected : { COSE_Generic_Headers } ; Unused and ignored\n)",
      "requires": [
        "COSE_Document_Header_Map",
        "COSE_Generic_Headers"
      ]
    },
    "COSE_Document_Standard_Headers": {
      "comment": "COSE Standard headers used by a Document",
      "def": "(\n\t? 1 => int / tstr,  ; algorithm identifier\n\t? 2 => [+COSE_label],    ; criticality\n\t? 3 => tstr / int,  ; content type\n\t? 4 => bstr,        ; key identifier\n\t? ( 5 => bstr //    ; IV\n\t\t6 => bstr )     ; Partial IV\n)\t\t",
      "requires": [
        "COSE_label"
      ]
    },
    "COSE_Generic_Headers": {
      "comment": "Generic Header definition",
      "def": "( * COSE_label => COSE_values )",
      "requires": [
        "COSE_label",
        "COSE_values"
      ]
    },
    "COSE_Sign": {
      "comment": "COSE-SIGN data object",
      "def": "[\n  COSE_Document_Headers,\n  payload : bstr / nil,\n  signatures : [+ COSE_Signature]\n]\t\t",
      "requires": [
        "COSE_Document_Headers",
        "COSE_Signature"
      ]
    },
    "COSE_Signature": {
      "comment": "An Individual Document Signature",
      "def": "[\n  COSE_Signature_Headers,\n  signature : bstr\n]",
      "requires": [
        "COSE_Signature_Headers"
      ]
    },
    "COSE_Signature_Header_Map": {
      "comment": "COSE Signature Header Map",
      "def": "{\n  COSE_Signature_Standard_Headers,\n  COSE_Generic_Headers\n}",
      "requires": [
        "COSE_Signature_Standard_Headers",
        "COSE_Generic_Headers"
      ]
    },
    "COSE_Signature_Headers": {
      "comment": "COSE Signature headers (only protected headers are used)",
      "def": "(\n  protected   : bstr .cbor COSE_Signature_Header_Map,\n  unprotected : { COSE_Generic_Headers } ; Unused and ignored\n)",
      "requires": [
        "COSE_Signature_Header_Map",
        "COSE_Generic_Headers"
      ]
    },
    "COSE_Signature_Standard_Headers": {
      "comment": "COSE Signature headers",
      "def": "(\n\t? 1 => int / tstr,  ; algorithm identifier\n\t? 2 => [+COSE_label],    ; criticality\n\t? 3 => tstr / int,  ; content type\n\t? 4 => bstr,        ; key identifier\n\t? ( 5 => bstr //    ; IV\n\t\t6 => bstr )     ; Partial IV\n),\nCOSE_Generic_Headers\n",
      "requires": [
        "COSE_label",
        "COSE_Generic_Headers"
      ]
    },
    "COSE_label": {
      "comment": "COSE Map Generic Label",
      "def": "int / tstr",
      "requires": []
    },
    "COSE_values": {
      "comment": "COSE Map Generic Value",
      "def": "any",
      "requires": []
    },
    "Signed_Document_Metadata_Headers": {
      "comment": "Generic definition (does not include metadata constraints)",
      "def": "COSE_Generic_Headers",
      "requires": [
        "COSE_Generic_Headers"
      ]
    },
    "blake2b_256": {
      "comment": "Blake2B-256",
      "def": "bytes .size 32",
      "description": "Blake2b Hash (256 bits)",
      "requires": []
    },
    "catalyst_id_kid": {
      "comment": "UTF8 Catalyst ID URI encoded as a bytes string.",
      "def": "bytes",
      "requires": []
    },
    "chain": {
      "comment": "Reference to the previous Signed Document in a sequence.\n* `height` is of the CURRENT block.\n* `document_ref` is *ONLY* omitted in the very first document in a sequence.",
      "def": "[height, ? document_ref]",
      "requires": [
        "height",
        "document_ref"
      ]
    },
    "cid": {
      "comment": "IPLD content identifier\nTODO: add size limits if possible",
      "def": "#6.42(bytes)",
      "description": "IPLD content identifier.\nAlso known as an IPFS CID\nSee: https://docs.ipfs.tech/concepts/content-addressing/#what-is-a-cid\n     https://github.com/ipld/cid-cbor/",
      "requires": []
    },
    "collaborators": {
      "comment": "Allowed Collaborators on the next subsequent version of a document.",
      "def": "[ * catalyst_id_kid ]",
      "requires": [
        "catalyst_id_kid"
      ]
    },
    "document_id": {
      "comment": "Document ID",
      "def": "uuid_v7",
      "description": "Unique Document Identifier",
      "requires": [
        "uuid_v7"
      ]
    },
    "document_locator": {
      "comment": "Where a document can be located, must be a unique identifier.",
      "def": "{ \n  \"cid\" => cid\n}",
      "requires": [
        "cid"
      ]
    },
    "document_ref": {
      "comment": "Reference to a single Signed Document",
      "def": "[\n  document_id, \n  document_ver, \n  document_locator\n]",
      "requires": [
        "document_id",
        "document_ver",
        "document_locator"
      ]
    },
    "document_refs": {
      "comment": "Reference to one or more Signed Documents",
      "def": "[ 1* document_ref ]",
      "requires": [
        "document_ref"
      ]
    },
    "document_type": {
      "comment": "Document Type",
      "def": "[ 1* uuid_v4 ]",
      "description": "Unique Document Type Identifier",
      "requires": [
        "uuid_v4"
      ]
    },
    "document_ver": {
      "comment": "Document Version",
      "def": "uuid_v7",
      "description": "Unique Chronological Document Version Identifier",
      "requires": [
        "uuid_v7"
      ]
    },
    "height": {
      "comment": "The consecutive sequence number of the current document \nin the chain.\nThe very first document in a sequence is numbered `0` and it\n*MUST ONLY* increment by one for each successive document in\nthe sequence.\n\nThe FINAL sequence number is encoded with the current height\nsequence value, negated. \n\nFor example the following values for height define a chain\nthat has 5 documents in the sequence 0-4, the final height \nis negated to indicate the end of the chain:\n`0, 1, 2, 3, -4`\n\nNo subsequent document can be chained to a sequence that has\na final chain height.",
      "def": "int",
      "requires": []
    },
    "http_content_encoding": {
      "comment": "Supported Content Encoding Types",
      "def": "tstr .eq \"br\"",
      "requires": []
    },
    "json_pointer": {
      "comment": "RFC6901 Standard JSON Pointer",
      "def": "text",
      "requires": []
    },
    "media_type": {
      "comment": "Supported Content Media Types.\nIf the Media Type is supported by COAP, then the `uint` CoAP encoded\nversion of the media type must be used, in preference to the string.",
      "def": "(\n    (uint .eq (0 / 50 / 60 / 20000)) / \n    (tstr .eq (\n        \"application/cbor\" /\n        \"application/cddl\" /\n        \"application/json\" /\n        \"application/schema+json\" /\n        \"text/css; charset=utf-8\" /\n        \"text/css; charset=utf-8; template=handlebars\" /\n        \"text/html; charset=utf-8\" /\n        \"text/html; charset=utf-8; template=handlebars\" /\n        \"text/markdown; charset=utf-8\" /\n        \"text/markdown; charset=utf-8; template=handlebars\" /\n        \"text/plain; charset=utf-8\" /\n        \"text/plain; charset=utf-8; template=handlebars\"\n    ))\n)",
      "requires": []
    },
    "revocations": {
      "comment": "List of revoked versions of this document.",
      "def": "[ * document_ver ] / true ",
      "requires": [
        "document_ver"
      ]
    },
    "section_ref": {
      "comment": "Reference to a section in a referenced document.",
      "def": "json_pointer",
      "requires": [
        "json_pointer"
      ]
    },
    "signed_document": {
      "comment": "Catalyst Signed Document data object.",
      "def": "COSE_Sign",
      "description": "Catalyst Signed Document.\n\nA specific implementation of a COSE-SIGN data objects\nused by the Catalyst project to encapsulate and authenticate\ndocuments used within the system.\n\nSee: https://datatracker.ietf.org/doc/html/rfc9052#name-signing-with-one-or-more-si",
      "requires": [
        "COSE_Sign"
      ]
    },
    "uuid_v4": {
      "comment": "UUIDv4",
      "def": "#6.37(bytes .size 16)",
      "description": "Version 4 UUID\nSee: https://www.rfc-editor.org/rfc/rfc9562.html#name-uuid-version-4\n     https://github.com/lucas-clemente/cbor-specs/blob/master/uuid.md",
      "requires": []
    },
    "uuid_v7": {
      "comment": "UUIDv7",
      "def": "#6.37(bytes .size 16)",
      "description": "Version 7 UUID\nSee: https://www.rfc-editor.org/rfc/rfc9562.html#name-uuid-version-7\n     https://github.com/lucas-clemente/cbor-specs/blob/master/uuid.md",
      "requires": []
    }
  },
  "contentTypes": {
    "application/cbor": {
      "coap_type": 60,
      "description": "An RFC8949 Binary CBOR Encoded Document."
    },
    "application/cddl": {
      "description": "A CDDL Document.\n\nNote: \n\n* This is an unofficial media type\n* RFC9165 Additional Control Operators for CDDL are supported.  \n* Must not have Modules, schema must be self-contained."
    },
    "application/json": {
      "coap_type": 50,
      "description": "JSON Document"
    },
    "application/schema+json": {
      "description": "A JSON Schema Draft 2020-12 Document.\n\nNote: \n\n* This is currently an unofficial media type."
    },
    "text/css; charset=utf-8": {
      "coap_type": 20000,
      "description": "CSS Content used for styling HTML.\nCSS should use the least set of features possible to achieve\nthe desired presentation to ensure the broadest compatibility."
    },
    "text/css; charset=utf-8; template=handlebars": {
      "description": "CSS Content used for styling HTML.\nCSS should use the least set of features possible to achieve\nthe desired presentation to ensure the broadest compatibility.\n\nThe text includes Handlebars type template fields that need\nprocessing and replacement prior to display."
    },
    "text/html; charset=utf-8": {
      "description": "Formatted text using HTML5 markup for rich text. \nOnly HTML5 syntax is supported."
    },
    "text/html; charset=utf-8; template=handlebars": {
      "description": "Formatted text using HTML5 markup for rich text. \nOnly HTML5 syntax is supported.\n\nThe text includes Handlebars type template fields that need\nprocessing and replacement prior to display."
    },
    "text/markdown; charset=utf-8": {
      "description": "Formatted text using Markdown for rich text. \nMarkdown formatting is as defined by CommonMark.\n\nIF the document includes HTML, then HTML5 syntax only is supported.\n\nThe following Markdown Extensions are also supported:\n\n* None"
    },
    "text/markdown; charset=utf-8; template=handlebars": {
      "description": "Formatted text using Markdown for rich text. \nMarkdown formatting is as defined by CommonMark.\n\nIF the document includes HTML, then HTML5 syntax only is supported.\n\nThe following Markdown Extensions are also supported:\n\n* None\n\nThe text includes Handlebars type template fields that need\nprocessing and replacement prior to display."
    },
    "text/plain; charset=utf-8": {
      "coap_type": 0,
      "description": "Plain Text with no markup or special formatting.\nMultiline Plain Text *MUST* always interpret `\n` \nas a hard line break."
    },
    "text/plain; charset=utf-8; template=handlebars": {
      "description": "Plain Text with no markup or special formatting.\nMultiline Plain Text *MUST* always interpret `\n` \nas a hard line break.\n\nThe text includes Handlebars type template fields that need\nprocessing and replacement prior to display."
    }
  },
  "copyright": {
    "copyright": "IOG Singapore, All Rights Reserved",
    "created": "2024-12-27",
    "license": "CC-BY-4.0",
    "versions": [
      {
        "changes": "* First Published Version",
        "modified": "2025-04-04",
        "version": "0.01"
      },
      {
        "changes": "* Add version control changelogs to the specification.",
        "modified": "2025-04-09",
        "version": "0.02"
      },
      {
        "changes": "* Use generalized parameters.",
        "modified": "2025-05-05",
        "version": "0.03"
      },
      {
        "changes": "* Improve and make document serialization more repeatable, and stricter.\n* TODO: Define Systems parameters\n* TODO: Define DReps documents.\n* TODO: Define Proposer Profiles.\n* TODO: Define Role 0 Profile.",
        "modified": "2025-05-30",
        "version": "0.04"
      }
    ]
  },
  "cose": {
    "headerFormats": {
      "Catalyst ID": {
        "cddl": "catalyst_id_kid",
        "description": "KID (Catalyst ID URI)"
      },
      "HTTP Content Encoding": {
        "cddl": "http_content_encoding",
        "description": "Encoding if any on the payload."
      },
      "Media Type": {
        "cddl": "media_type",
        "description": "A Media Type string which identifies the payload."
      }
    },
    "headers": {
      "content type": {
        "coseLabel": 3,
        "description": "Media Type/s allowed in the Payload",
        "format": "Media Type",
        "required": "yes",
        "value": [
          "application/cbor",
          "application/cddl",
          "application/json",
          "application/schema+json",
          "text/css; charset=utf-8",
          "text/css; charset=utf-8; template=handlebars",
          "text/html; charset=utf-8",
          "text/html; charset=utf-8; template=handlebars",
          "text/markdown; charset=utf-8",
          "text/markdown; charset=utf-8; template=handlebars",
          "text/plain; charset=utf-8",
          "text/plain; charset=utf-8; template=handlebars"
        ]
      },
      "content-encoding": {
        "coseLabel": "content-encoding",
        "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
        "format": "HTTP Content Encoding",
        "required": "optional",
        "value": [
          "br"
        ]
      }
    },
    "headersOrder": [
      "content type",
      "content-encoding"
    ],
    "signature_headers": {
      "kid": {
        "coseLabel": 4,
        "description": "Catalyst ID URI identifying the Public Key.\n\nThe `kid` is a UTF-8 encoded Catalyst ID URI.\nAny `kid` URI which conforms to the Catalyst ID specification may be used.\nThe Catalyst ID unambiguously defines both the signing keys and signing algorithm\nused to sign the protected portion of the document.\t\t\t",
        "format": "Catalyst ID",
        "required": "yes"
      }
    }
  },
  "doc_clusters": {
    "System Parameters": {
      "docs": [
        "Brand Parameters",
        "Campaign Parameters",
        "Category Parameters"
      ]
    }
  },
  "docs": {
    "Brand Parameters": {
      "authors": {
        "Nathan Bogale": "nathan.bogale@iohk.io",
        "Steven Johnson": "steven.johnson@iohk.io"
      },
      "description": "Brand Parameters define the parameter data required for the\nsystem at the Brand level.\n\nParameter Data includes things such as:\n\n* Functional parameters\n* Timeline data\n* Branded Content and Copy\n\nThe content of the parameters is defined solely by the \nBrand Parameters Form Template.\n\nThis allows parameters to vary based on individual system\nrequirements over time.\n\nFunctional Parameters are mapped using the (TBD Functional Parameters Map).\n\nThe payload of a Brand is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "optional",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "optional",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Brand Parameters Form Template",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "Brand Parameters Document controlling the Brand \nwithin a Brand.\n\nMust be valid according to the schema contained within the \n`Document Reference` from the `template` metadata."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true,
          "collaborators": true
        }
      },
      "type": [
        "60185874-7e13-407c-a06c-238ffe637ae6",
        "ebcabeeb-5bc5-4f95-91e8-cab8ca724172"
      ],
      "validation": "No extra validation defined.",
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Generalized as another kind of form data document",
          "modified": "2025-06-20",
          "version": "0.02"
        }
      ]
    },
    "Brand Parameters Form Template": {
      "authors": {},
      "description": "A Brand Parameters Form Template defines both:\n\n* The data that is entered in the Form.\n* Formatting hints for the collection of the data in a form.\n\nA Brand Parameters Form Template is a JSON Schema Document.\n\nBrand Parameters entry *SHOULD* use the hints when collecting \ndata defined by the Brand Parameters Form Template to provide a \nconsistent user interface.\nIt *CAN* also use those hints when re-displaying the full forms data.\n\nAlternatively a Brand Parameters Presentation Template can be used to\nformat the Brand Parameters data for presentation.\n\nThe Brand Parameters Document is intentionally general, \nhowever it may be linked to a brand/campaign or category \nvia the template used by the Brand Parameters.\n\nThe payload of a Brand Parameters is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Schema document which defines the valid contents and \nformatting hints for the collection of data for a \nBrand Parameters Document."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "60185874-7e13-407c-a06c-238ffe637ae6",
        "ebcabeeb-5bc5-4f95-91e8-cab8ca724172"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        },
        {
          "changes": "* Generalize the Form Template definitions.",
          "modified": "2025-05-05",
          "version": "0.04"
        }
      ]
    },
    "Campaign Parameters": {
      "authors": {
        "Nathan Bogale": "nathan.bogale@iohk.io",
        "Steven Johnson": "steven.johnson@iohk.io"
      },
      "description": "Campaign Parameters define the parameter data required for the\nsystem at the Campaign level.\n\nParameter Data includes things such as:\n\n* Functional parameters\n* Timeline data\n* Branded Content and Copy\n\nThe content of the parameters is defined solely by the \nCampaign Parameters Form Template.\n\nThis allows parameters to vary based on individual system\nrequirements over time.\n\nFunctional Parameters are mapped using the (TBD Functional Parameters Map).\n\nThe payload of a Campaign is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "optional",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Brand Parameters",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "optional",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Campaign Parameters Form Template",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "Campaign Parameters Document controlling the Campaign \nwithin a Brand.\n\nMust be valid according to the schema contained within the \n`Document Reference` from the `template` metadata."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true,
          "collaborators": true
        }
      },
      "type": [
        "60185874-7e13-407c-a06c-238ffe637ae6",
        "5ef32d5d-f240-462c-a7a4-ba4af221fa23"
      ],
      "validation": "The Campaign Parameters Document *MUST* be linked through `parameters` to \nits Brand Parameters Document.",
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Generalized as another kind of form data document",
          "modified": "2025-06-20",
          "version": "0.02"
        }
      ]
    },
    "Campaign Parameters Form Template": {
      "authors": {},
      "description": "A Campaign Parameters Form Template defines both:\n\n* The data that is entered in the Form.\n* Formatting hints for the collection of the data in a form.\n\nA Campaign Parameters Form Template is a JSON Schema Document.\n\nCampaign Parameters entry *SHOULD* use the hints when collecting \ndata defined by the Campaign Parameters Form Template to provide a \nconsistent user interface.\nIt *CAN* also use those hints when re-displaying the full forms data.\n\nAlternatively a Campaign Parameters Presentation Template can be used to\nformat the Campaign Parameters data for presentation.\n\nThe Campaign Parameters Document is intentionally general, \nhowever it may be linked to a brand/campaign or category \nvia the template used by the Campaign Parameters.\n\nThe payload of a Campaign Parameters is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Schema document which defines the valid contents and \nformatting hints for the collection of data for a \nCampaign Parameters Document."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "60185874-7e13-407c-a06c-238ffe637ae6",
        "5ef32d5d-f240-462c-a7a4-ba4af221fa23"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        },
        {
          "changes": "* Generalize the Form Template definitions.",
          "modified": "2025-05-05",
          "version": "0.04"
        }
      ]
    },
    "Category Parameters": {
      "authors": {
        "Nathan Bogale": "nathan.bogale@iohk.io",
        "Steven Johnson": "steven.johnson@iohk.io"
      },
      "description": "Category Parameters define the parameter data required for the\nsystem at the Category level.\n\nParameter Data includes things such as:\n\n* Functional parameters\n* Timeline data\n* Branded Content and Copy\n\nThe content of the parameters is defined solely by the \nCategory Parameters Form Template.\n\nThis allows parameters to vary based on individual system\nrequirements over time.\n\nFunctional Parameters are mapped using the (TBD Functional Parameters Map).\n\nThe payload of a Category is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "optional",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Campaign Parameters",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "optional",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Category Parameters Form Template",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "Category Parameters Document controlling the Category \nwithin a Campaign.\n\nMust be valid according to the schema contained within the \n`Document Reference` from the `template` metadata."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true,
          "collaborators": true
        }
      },
      "type": [
        "60185874-7e13-407c-a06c-238ffe637ae6",
        "818938c3-3139-4daa-afe6-974c78488e95"
      ],
      "validation": "The Category Parameters Document *MUST* be linked through `parameters` to \nits Campaign Parameters Document.",
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Generalized as another kind of form data document",
          "modified": "2025-06-20",
          "version": "0.02"
        }
      ]
    },
    "Category Parameters Form Template": {
      "authors": {},
      "description": "A Category Parameters Form Template defines both:\n\n* The data that is entered in the Form.\n* Formatting hints for the collection of the data in a form.\n\nA Category Parameters Form Template is a JSON Schema Document.\n\nCategory Parameters entry *SHOULD* use the hints when collecting \ndata defined by the Category Parameters Form Template to provide a \nconsistent user interface.\nIt *CAN* also use those hints when re-displaying the full forms data.\n\nAlternatively a Category Parameters Presentation Template can be used to\nformat the Category Parameters data for presentation.\n\nThe Category Parameters Document is intentionally general, \nhowever it may be linked to a brand/campaign or category \nvia the template used by the Category Parameters.\n\nThe payload of a Category Parameters is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Schema document which defines the valid contents and \nformatting hints for the collection of data for a \nCategory Parameters Document."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "60185874-7e13-407c-a06c-238ffe637ae6",
        "818938c3-3139-4daa-afe6-974c78488e95"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        },
        {
          "changes": "* Generalize the Form Template definitions.",
          "modified": "2025-05-05",
          "version": "0.04"
        }
      ]
    },
    "Comment Moderation Action": {
      "authors": {},
      "description": "A Moderation Action performed on any Comment.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": [
            "Proposal Comment"
          ],
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "signers": {
        "roles": {
          "user": [
            "Registered"
          ]
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "5e60e623-ad02-4a1b-a1ac-406db978ee48",
        "b679ded3-0e7c-41ba-89f8-da62a17898ea",
        "a5d232b8-5e03-4117-9afd-be32b878fcdd"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        }
      ]
    },
    "Contest Delegation": {
      "authors": {
        "Neil McAuliffe": "neil.mcauliffe@iohk.io"
      },
      "business_logic": {
        "back_end": "* Verifies that the voter and Representative are valid and registered for the category.\n* Records the delegation of voting power from the voter to the Representative.",
        "front_end": "* Allows a voter to select a Representative from a list of eligible candidates for a category.\n* The voter signs this document to confirm their delegation choice."
      },
      "description": "Delegation by a Registered User to a Representative for\na contest.\n\nThis delegation allows votes cast by the Representative\nto use the voting power of the delegating User, in addition\nto their own personal voting power and that of all other Users\nwho delegate to the same Representative.\n\nDelegation is for a specific Contest.\nMultiple Delegations must be published if there are multiple\nContests within a Brand/Campaign or Category.\n\nThis is because different Contests may have different rules.\nAnd not all Representatives will choose to nominate\nfor every Contest.",
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": [
            "ref"
          ],
          "multiple": false,
          "required": "yes",
          "type": "Contest Parameters",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Rep Nomination",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "  A minimal payload indicating the intended status of the delegation.\n  'active' creates or affirms the delegation.\n  'revoked' withdraws the delegation.",
        "nil": true
      },
      "signers": {
        "roles": {
          "user": [
            "Registered"
          ]
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "764f17fb-cc50-4979-b14a-b213dbac5994",
        "788ff4c6-d65a-451f-bb33-575fe056b411"
      ],
      "validation": "* The `parameters` metadata *MUST* point to the same Contest as the \n\tNomination of the Representative.\n* The 'ref' metadata field MUST point to a valid 'Representative Nomination'.\n* The payload MUST be nil.\n\nA Representative *MUST* Delegate to their latest Nomination for a Category,\notherwise their Nomination is invalid.\n\nThis is because Delegation points to a *SPECIFIC* Nomination, and it\n*MUST* be the latest for the Representative on the Contest.\nAs the Nomination contains information that the User relies on\nwhen choosing to delegate, changing that information could have a \nreal and detrimental result in the Delegation choice.\nTherefore, for a Delegation to be valid, it *MUST* point to the\nlatest Nomination for a Representative.",
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-06-19",
          "version": "0.01"
        }
      ]
    },
    "Contest Parameters": {
      "authors": {
        "Nathan Bogale": "nathan.bogale@iohk.io",
        "Steven Johnson": "steven.johnson@iohk.io"
      },
      "description": "Contest Parameters define the parameter data required for the\nsystem at the Contest level.\n\nParameter Data includes things such as:\n\n* Functional parameters\n* Timeline data\n* Branded Content and Copy\n\nThe content of the parameters is defined solely by the \nContest Parameters Form Template.\n\nThis allows parameters to vary based on individual system\nrequirements over time.\n\nFunctional Parameters are mapped using the (TBD Functional Parameters Map).\n\nThe payload of a Contest is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "optional",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "optional",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Contest Parameters Form Template",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "Contest Parameters Document controlling the Contest \nwithin a Brand/Campaign/Category.\n\nMust be valid according to the schema contained within the \n`Document Reference` from the `template` metadata."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true,
          "collaborators": true
        }
      },
      "type": [
        "60185874-7e13-407c-a06c-238ffe637ae6",
        "788ff4c6-d65a-451f-bb33-575fe056b411"
      ],
      "validation": "The Contest Parameters Document *MUST* be linked through `parameters` to \nits Brand/Campaign/Category Parameters Document.",
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Generalized as another kind of form data document",
          "modified": "2025-06-20",
          "version": "0.02"
        }
      ]
    },
    "Contest Parameters Form Template": {
      "authors": {},
      "description": "A Contest Parameters Form Template defines both:\n\n* The data that is entered in the Form.\n* Formatting hints for the collection of the data in a form.\n\nA Contest Parameters Form Template is a JSON Schema Document.\n\nContest Parameters entry *SHOULD* use the hints when collecting \ndata defined by the Contest Parameters Form Template to provide a \nconsistent user interface.\nIt *CAN* also use those hints when re-displaying the full forms data.\n\nAlternatively a Contest Parameters Presentation Template can be used to\nformat the Contest Parameters data for presentation.\n\nThe Contest Parameters Document is intentionally general, \nhowever it may be linked to a brand/campaign or category \nvia the template used by the Contest Parameters.\n\nThe payload of a Contest Parameters is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Schema document which defines the valid contents and \nformatting hints for the collection of data for a \nContest Parameters Document."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "60185874-7e13-407c-a06c-238ffe637ae6",
        "788ff4c6-d65a-451f-bb33-575fe056b411"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        },
        {
          "changes": "* Generalize the Form Template definitions.",
          "modified": "2025-05-05",
          "version": "0.04"
        }
      ]
    },
    "Proposal": {
      "authors": {
        "Steven Johnson": "steven.johnson@iohk.io"
      },
      "business_logic": {
        "back_end": "Before accepting a new proposal to be published, the backend will ensure:\n\n* The document has been signed by a valid author or collaborator.\n* That the signer of the document was a registered proposer\n* That the document was signed with their proposers key\n* That all listed `collaborators` are registered as proposers.\n* That the document has been signed validly according to the [validation](#validation) rules.",
        "front_end": "As validity of the documents is currently enforced by the backend, \nthe front end does not need to validate the document has been signed\ncorrectly.\nIt may do so, but it is not required."
      },
      "description": "A Proposal is a document which describes a proposed solution or project to\naddress the criteria of a category within a campaign.\n\nThe proposal itself is a draft document, it is not submitted for consideration\nunless a `Proposal Submission Action` is submitted which references it.\n\nProposals themselves are intentionally general, however they may be\nlinked to a brand/campaign or category via the template used by the proposal.\n\nThe payload of a proposal is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "optional",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": [
            "template"
          ],
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "optional",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Proposal Form Template",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "Proposal Document drafted for submission to a category of a campaign.\n\nMust be valid according to the schema contained within the \n`Document Reference` from the `template` metadata."
      },
      "signers": {
        "roles": {
          "user": [
            "Proposer"
          ]
        },
        "update": {
          "author": true,
          "collaborators": true
        }
      },
      "type": [
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc"
      ],
      "validation": "The first version of a Proposal *MUST* be signed by the original author.\nIt may optionally be co-signed by any of the listed `collaborators`.\nIt may not be signed by anyone else.\n\nSubsequent Versions can be signed/co-signed by either the Original Author of the first version,\nOR any of the listed `collaborators` in the immediately previous version.\nThis allows any collaborator to update the next version of a document, provided they are still a collaborator.\nIt is valid for a proposal to be signed by a collaborator \nwho is no longer listed as in the `collaborators`\nof the document they are signing, provided they are listed as a collaborator in the immediately previous document version.\nThis allows for a collaborator to make an update to the document which removes themselves\nfrom the `collaborators` list.\n\nAll versions of the document *MUST* list the author as the original author.\nThe Author can not be changed by any document revision.",
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        }
      ]
    },
    "Proposal Comment": {
      "authors": {},
      "business_logic": {
        "back_end": "The backend will only validate the document being referenced exists, \nand the integrity of the `ref` and `reply` metadata fields is correct.",
        "front_end": "Comments are valid for any version of the document, however\nas comments refer to a specific version of a document, they may\nlose context when displayed against the latest version of a document.\nIn these cases, the front end should clearly show that a comment was on\na different version of the document.\n\nIf the front end posts a reply to another comment: \n\n* it should reference the comment being replied to in the `reply` field. \n* The `ref` field must refer to the same document, but can be a different version."
      },
      "description": "A Proposal Comment is a document which comments on a referenced Proposal document.\n\nProposal Comments themselves are intentionally general, however they may be\nlinked to a brand/campaign or category via the template used by the proposal.\n\nThe payload of a proposal comment is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": [
            "ref",
            "template"
          ],
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Proposal",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "optional",
          "type": "Proposal Comment",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "optional",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "optional",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Proposal Comment Form Template",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Document which must validate against the referenced template."
      },
      "signers": {
        "roles": {
          "user": [
            "Registered"
          ]
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "b679ded3-0e7c-41ba-89f8-da62a17898ea",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc"
      ],
      "validation": "A comment which is a reply *MUST* reference the same document.\nIt may reference a different version of the document.",
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        }
      ]
    },
    "Proposal Comment Form Template": {
      "authors": {},
      "description": "A Proposal Comment Form Template defines both:\n\n* The data that is entered in the Form.\n* Formatting hints for the collection of the data in a form.\n\nA Proposal Comment Form Template is a JSON Schema Document.\n\nProposal Comment entry *SHOULD* use the hints when collecting \ndata defined by the Proposal Comment Form Template to provide a \nconsistent user interface.\nIt *CAN* also use those hints when re-displaying the full forms data.\n\nAlternatively a Proposal Comment Presentation Template can be used to\nformat the Proposal Comment data for presentation.\n\nThe Proposal Comment Document is intentionally general, \nhowever it may be linked to a brand/campaign or category \nvia the template used by the Proposal Comment.\n\nThe payload of a Proposal Comment is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Schema document which defines the valid contents and \nformatting hints for the collection of data for a \nProposal Comment Document."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "b679ded3-0e7c-41ba-89f8-da62a17898ea",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        },
        {
          "changes": "* Generalize the Form Template definitions.",
          "modified": "2025-05-05",
          "version": "0.04"
        }
      ]
    },
    "Proposal Comment Presentation Template": {
      "authors": {},
      "description": "A Proposal Comment Presentation Template defines how the data\ncaptured by the Proposal Comment Form Template is to be displayed.\n\nMultiple Proposal Comment Presentation Templates can exist for the \nsame Proposal Comment Form Template.\nEach can be used to display the form data under different \ncircumstances.\n\nProposal Comment Presentation Templates can reference any data contained\nin the Proposal Comment Document, as well as any documents linked by:\n\n* `ref`\n* `reply`\n* `parameters`\n\nThe presentation of the payload of a Proposal Comment is controlled by \nits Proposal Comment Presentation Template/s.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "TBD.\nBut roughly, will be:\n\n1. A way to identify where the presentation template is intended to be used.\n2. Optional CSS to control the presentation.\n3. A Handlebars templated HTML or Markdown file data which defines the presentation."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin",
            "Campaign Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "cb99b9bd-681a-49d8-9836-89107c02e8ef",
        "b679ded3-0e7c-41ba-89f8-da62a17898ea",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc"
      ],
      "versions": [
        {
          "changes": "* First Version.",
          "modified": "2025-05-05",
          "version": "0.04"
        }
      ]
    },
    "Proposal Form Template": {
      "authors": {},
      "description": "A Proposal Form Template defines both:\n\n* The data that is entered in the Form.\n* Formatting hints for the collection of the data in a form.\n\nA Proposal Form Template is a JSON Schema Document.\n\nProposal entry *SHOULD* use the hints when collecting \ndata defined by the Proposal Form Template to provide a \nconsistent user interface.\nIt *CAN* also use those hints when re-displaying the full forms data.\n\nAlternatively a Proposal Presentation Template can be used to\nformat the Proposal data for presentation.\n\nThe Proposal Document is intentionally general, \nhowever it may be linked to a brand/campaign or category \nvia the template used by the Proposal.\n\nThe payload of a Proposal is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Schema document which defines the valid contents and \nformatting hints for the collection of data for a \nProposal Document."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        },
        {
          "changes": "* Generalize the Form Template definitions.",
          "modified": "2025-05-05",
          "version": "0.04"
        }
      ]
    },
    "Proposal Moderation Action": {
      "authors": {},
      "description": "A Moderation action performed on a Proposal.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Proposal",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "signers": {
        "roles": {
          "user": [
            "Registered"
          ]
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "5e60e623-ad02-4a1b-a1ac-406db978ee48",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc",
        "a5d232b8-5e03-4117-9afd-be32b878fcdd"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        }
      ]
    },
    "Proposal Presentation Template": {
      "authors": {},
      "description": "A Proposal Presentation Template defines how the data\ncaptured by the Proposal Form Template is to be displayed.\n\nMultiple Proposal Presentation Templates can exist for the \nsame Proposal Form Template.\nEach can be used to display the form data under different \ncircumstances.\n\nProposal Presentation Templates can reference any data contained\nin the Proposal Document, as well as any documents linked by:\n\n* `ref`\n* `reply`\n* `parameters`\n\nThe presentation of the payload of a Proposal is controlled by \nits Proposal Presentation Template/s.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "TBD.\nBut roughly, will be:\n\n1. A way to identify where the presentation template is intended to be used.\n2. Optional CSS to control the presentation.\n3. A Handlebars templated HTML or Markdown file data which defines the presentation."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin",
            "Campaign Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "cb99b9bd-681a-49d8-9836-89107c02e8ef",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc"
      ],
      "versions": [
        {
          "changes": "* First Version.",
          "modified": "2025-05-05",
          "version": "0.04"
        }
      ]
    },
    "Proposal Submission Action": {
      "authors": {},
      "business_logic": {
        "back_end": "A Submitted proposal with collaborators *MUST* have \na `final` submission by *ALL* listed `collaborators`.\nIf any `collaborator` has not submitted a `final` submission by the deadline, then the proposal \nis not considered `final` and will not be considered in the category it was being submitted to.",
        "front_end": "A proposal with `collaborators` will not be shown as having a confirmed collaborator,\nunless there exists a `draft` or `final` proposal submission from that collaborator.\n\nAny document that lists a collaborator should be highlighted to that collaborator so\nthey can take appropriate action, such as:\n\n* Confirm they are a collaborator by submitting this document as `draft`\n* Agree to being a collaborator on the final submission by submitting this document as `final`\n* Hide themselves from the collaborators list but do not remove themselves by submitting `hide`\n* Remove themselves permanently as a collaborator by publishing a new version with them removed.\n\nTo eliminate the necessity for collaborators to accept collaboration on every version, \nthey will be considered as agreeing to be a collaborator on any version of the document\nthat lists them, if their latest submission is `draft` or `final`.\n\nIf their latest submission on a document is `hide` they should be considered to not\nhave agreed to be a collaborator.\n\n*NOTE* `final` status ONLY applies to the exactly referenced document and version."
      },
      "description": "Proposal Submission Action\n\nA Proposal Submission Action is a document which can attempt to either submit a \nparticular version of a proposal into a campaign, or withdraw it.\n\nThe last action on the document ts the action which takes effect at the deadline.\n\nFor multiple collaborators, multiple submission actions can be posted independently, \nbut none of them will take effect until ALL collaborators have posted equivalent actions.\n\nFor example, three collaborators Alice/Bob/Claire can each post one submission action\nfor the same document.  \nUnless they all submit the same version of the proposal\nthe proposal will not be seen as submitted.\n\nThe payload is a fixed format.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": [
            "ref"
          ],
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters",
            "Campaign Parameters",
            "Category Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": true,
          "required": "yes",
          "type": "Proposal",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "The kind of action is controlled by this payload.\nThe Payload is a JSON Document, and must conform to this schema.\n\nStates:\n\n* `final` : All collaborators must publish a `final` status for the proposal to be `final`.\n* `draft` : Reverses the previous `final` state for a signer and accepts collaborator status to a document.  \n* `hide`  : Requests the proposal be hidden (not final, but a hidden draft).  \n\t\t\t`hide` is only actioned if sent by the author, \n\t\t\tfor a collaborator it identified that they do not wish to be listed as a `collaborator`.",
        "examples": [
          {
            "description": "This document indicates the linked proposal is final and requested to proceed for further consideration.",
            "example": {
              "action": "final"
            },
            "title": "Final Proposal Submission"
          },
          {
            "description": "This document indicates the linked proposal is no longer final and should not proceed for further consideration.\nIt is also used by collaborators to accept that they are a collaborator on a document.",
            "example": {
              "action": "draft"
            },
            "title": "Draft Proposal Submission"
          },
          {
            "description": "If submitted by the proposal author the document is hidden, it is still public but not shown as\na proposal being drafted.\nIf submitted by a collaborator, that collaborator is declaring they do not wish to be listed as\na collaborator on the proposal.",
            "example": {
              "action": "hide"
            },
            "title": "Hidden Proposal Submission"
          }
        ],
        "schema": {
          "$id": "https://raw.githubusercontent.com/input-output-hk/catalyst-libs/refs/heads/main/specs/signed_docs/docs/payload_schemas/proposal_submission_action.schema.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "definitions": {
            "action": {
              "description": "The action being performed on the Proposal.",
              "enum": [
                "final",
                "draft",
                "hide"
              ],
              "type": "string"
            }
          },
          "description": "Structure of the payload of a Proposal Submission Action.",
          "maintainers": [
            {
              "name": "Catalyst Team",
              "url": "https://projectcatalyst.io/"
            }
          ],
          "properties": {
            "action": {
              "$ref": "#/definitions/action"
            }
          },
          "required": [
            "action"
          ],
          "title": "Proposal Submission Action Payload Schema",
          "type": "object",
          "x-changelog": {
            "2025-03-01": [
              "First Version Created."
            ]
          }
        }
      },
      "signers": {
        "referenced": true,
        "roles": {
          "user": [
            "Proposer"
          ]
        },
        "update": {
          "author": true,
          "collaborators": true
        }
      },
      "type": [
        "5e60e623-ad02-4a1b-a1ac-406db978ee48",
        "7808d2ba-d511-40af-84e8-c0d1625fdfdc",
        "78927329-cfd9-4ea1-9c71-0e019b126a65"
      ],
      "validation": "No validation is required beyond as defined by:\n\n* [metadata](#metadata) \n* [payload](#payload)\n* [signers](#signers)",
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        }
      ]
    },
    "Rep Nomination": {
      "authors": {
        "Neil McAuliffe": "neil.mcauliffe@iohk.io",
        "Steven Johnson": "steven.johnson@iohk.io"
      },
      "business_logic": {
        "back_end": "* The backend MUST verify the signer is a 'Representative' and that all referenced documents exist.\n* The system will only consider Representatives as having valid Nominations if:\n  * Their latest Nomination in a Contest is not Revoked.\n  * Their latest Delegation in a Contest references their latest Nomination.",
        "front_end": "* Allows a Representative to create or update their profile for a category.\n* The Representative sets their status to 'active' to be discoverable for delegation.\n* The Representative `revokes` the Nomination to signal they are no longer \n\tparticipating in the category.\n* Nominations are not valid if the latest Delegation by the Representative does NOT\n\treference their latest Nomination."
      },
      "description": "A Representative Nomination Document is created to opt\nin as a Representative Voter for a specific Contest on a Brand/Campaign or Category.\n\nThis Document is a kind of `Profile` that is primarily used to\nhelp justify the Representatives Nomination to prospective delegators.\n\nThe user must have registered as a Representative.\nThe presence of this document signifies the user's intent to participate in that \ncontest as a Representative.\n\nThe document's structure is defined by the associated \nRep Nomination Form Template.\nThis allows an Admin to specify contest-specific requirements.\n\nThe Representative can retract their nomination by using the `revoke` metadata to\nrevoke this Nomination document.\n\nIt is an extension of all other profiles attached to the same Catalyst ID.\n\nProfiles themselves are intentionally general, however they may be\nlinked to a Brand/Campaign/Category via the template used by the profile.\n\nThe payload of a profile is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": [
            "template"
          ],
          "multiple": false,
          "required": "yes",
          "type": "Contest Parameters",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Rep Profile",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "optional",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Rep Nomination Form Template",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "The Representative's profile data for a specific contest.\nIts structure is defined by the referenced template document.\n\nIn the case of Revoking a nomination the payload is `nil`."
      },
      "signers": {
        "roles": {
          "user": [
            "Representative"
          ]
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "bf9abd97-5d1f-4429-8e80-740fea371a9c",
        "94579df1-a6dc-433b-a8e8-910c5dc2f0e3"
      ],
      "validation": "* The signer MUST be a registered 'Representative'.\n* The 'ref' metadata field MUST point to a valid 'Representative Profile' document.\n* The 'parameters' metadata field MUST point to a valid 'Contest Parameters' document.\n* The 'template' metadata field MUST point to a valid 'Representative Nomination Form Template' document.\n* The payload MUST be valid against the JSON schema defined in the referenced template.\n* Other rules may apply as defined by the Contest or other parameters which can\n\tcontrol who may validly nominate as a representative in a Contest.\n\nNo Nomination is valid unless the latest Contest Delegation of the Delegate\nrefers to their own Nomination.\nThis requires that Nominating is a two step process:\n\n1. Post the Nomination Document.\n2. Post a Contest Delegation delegating to the new Nomination Document.\n\nUpdating the Nomination Document will invalidate all Nominations to the \nRepresentative.\n\nThis is because Delegation points to a *SPECIFIC* Nomination, and it\n*MUST* be the latest for the Representative on the Contest.\nAs the Nomination contains information that the User relies on\nwhen choosing to delegate, changing that information could have a \nreal and detrimental result in the Delegation choice.\nTherefore, for a Delegation to be valid, it *MUST* point to the\nlatest Nomination for a Representative.",
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-06-19",
          "version": "0.01"
        }
      ]
    },
    "Rep Nomination Form Template": {
      "authors": {},
      "description": "A Rep Nomination Form Template defines both:\n\n* The data that is entered in the Form.\n* Formatting hints for the collection of the data in a form.\n\nA Rep Nomination Form Template is a JSON Schema Document.\n\nRep Nomination entry *SHOULD* use the hints when collecting \ndata defined by the Rep Nomination Form Template to provide a \nconsistent user interface.\nIt *CAN* also use those hints when re-displaying the full forms data.\n\nAlternatively a Rep Nomination Presentation Template can be used to\nformat the Rep Nomination data for presentation.\n\nThe Rep Nomination Document is intentionally general, \nhowever it may be linked to a brand/campaign or category \nvia the template used by the Rep Nomination.\n\nThe payload of a Rep Nomination is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Contest Parameters",
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Schema document which defines the valid contents and \nformatting hints for the collection of data for a \nRep Nomination Document."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "bf9abd97-5d1f-4429-8e80-740fea371a9c",
        "94579df1-a6dc-433b-a8e8-910c5dc2f0e3"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        },
        {
          "changes": "* Generalize the Form Template definitions.",
          "modified": "2025-05-05",
          "version": "0.04"
        }
      ]
    },
    "Rep Profile": {
      "authors": {
        "Neil McAuliffe": "neil.mcauliffe@iohk.io",
        "Steven Johnson": "steven.johnson@iohk.io"
      },
      "business_logic": {
        "back_end": "* Validate Representative profile data against the referenced 'Rep Profile Template' and store/index it.\n* This global profile is the foundational document referenced by all of the Rep's contest specific profiles.",
        "front_end": "* Display and allow editing of the Representative's core profile fields.\n* This profile serves as the central hub for a Representative's public identity."
      },
      "description": "A Rep Profile allows a representative voter to publish information\nabout themselves to help explain who they are and why someone should\nconsider delegating to them.\n\nIt is an extension of all other profiles attached to the same Catalyst ID.\n\nProfiles themselves are intentionally general, however they may be\nlinked to a brand via the template used by the profile.\n\nThe payload of a profile is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": [
            "template"
          ],
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "optional",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": "Rep Profile Form Template",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "The Representative profile payload contains all Representative-specific fields.\nIts structure is defined by the referenced Rep Profile Template.\n\nMust be valid according to the schema contained within the \n`Document Reference` from the `template` metadata."
      },
      "signers": {
        "roles": {
          "user": [
            "Representative"
          ]
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "0f2c86a2-ffda-40b0-ad38-23709e1c10b3",
        "94579df1-a6dc-433b-a8e8-910c5dc2f0e3"
      ],
      "validation": "* The signer MUST be a registered 'Representative'.\n* The payload MUST be valid against the JSON schema defined in the referenced \n'Rep Profile Template'.",
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-06-19",
          "version": "0.01"
        }
      ]
    },
    "Rep Profile Form Template": {
      "authors": {},
      "description": "A Rep Profile Form Template defines both:\n\n* The data that is entered in the Form.\n* Formatting hints for the collection of the data in a form.\n\nA Rep Profile Form Template is a JSON Schema Document.\n\nRep Profile entry *SHOULD* use the hints when collecting \ndata defined by the Rep Profile Form Template to provide a \nconsistent user interface.\nIt *CAN* also use those hints when re-displaying the full forms data.\n\nAlternatively a Rep Profile Presentation Template can be used to\nformat the Rep Profile data for presentation.\n\nThe Rep Profile Document is intentionally general, \nhowever it may be linked to a brand/campaign or category \nvia the template used by the Rep Profile.\n\nThe payload of a Rep Profile is controlled by its template.",
      "headers": {
        "content type": {
          "coseLabel": 3,
          "description": "Media Type/s allowed in the Payload",
          "format": "Media Type",
          "required": "yes",
          "value": "application/schema+json"
        },
        "content-encoding": {
          "coseLabel": "content-encoding",
          "description": "Supported HTTP Encodings of the Payload.\nIf no compression or encoding is used, then this field must not be present.",
          "format": "HTTP Content Encoding",
          "required": "optional",
          "value": [
            "br"
          ]
        }
      },
      "metadata": {
        "chain": {
          "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
          "format": "Chain Link",
          "required": "excluded",
          "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document."
        },
        "collaborators": {
          "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
          "format": "Collaborators Reference List",
          "required": "excluded",
          "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
        },
        "id": {
          "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
          "format": "Document Id",
          "required": "yes",
          "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
        },
        "parameters": {
          "description": "A reference to the Parameters Document this document lies under.",
          "format": "Document Reference",
          "linked_refs": null,
          "multiple": false,
          "required": "yes",
          "type": [
            "Brand Parameters"
          ],
          "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
        },
        "ref": {
          "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
        },
        "reply": {
          "description": "Reference to a Comment document type being referred to.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
        },
        "revocations": {
          "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
          "format": "Version Revocations",
          "required": "excluded",
          "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
        },
        "section": {
          "description": "A Reference to the original document, or the comment being replied to.",
          "format": "Section Reference",
          "required": "excluded",
          "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
        },
        "template": {
          "description": "Reference to the template used to create and/or validate this document.",
          "format": "Document Reference",
          "required": "excluded",
          "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
        },
        "type": {
          "description": "The document TYPE.",
          "format": "Document Type",
          "required": "yes",
          "validation": "**MUST** be a known document type."
        },
        "ver": {
          "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents new versions of the same document as it changes over time.",
          "format": "Document Ver",
          "required": "yes",
          "validation": "The document version must always be >= the document ID."
        }
      },
      "notes": [],
      "payload": {
        "description": "JSON Schema document which defines the valid contents and \nformatting hints for the collection of data for a \nRep Profile Document."
      },
      "signers": {
        "roles": {
          "admin": [
            "Brand Admin"
          ],
          "user": []
        },
        "update": {
          "author": true
        }
      },
      "type": [
        "0ce8ab38-9258-4fbc-a62e-7faa6e58318f",
        "0f2c86a2-ffda-40b0-ad38-23709e1c10b3",
        "94579df1-a6dc-433b-a8e8-910c5dc2f0e3"
      ],
      "versions": [
        {
          "changes": "* First Published Version",
          "modified": "2025-04-04",
          "version": "0.01"
        },
        {
          "changes": "* Use generalized parameters.",
          "modified": "2025-05-05",
          "version": "0.03"
        },
        {
          "changes": "* Generalize the Form Template definitions.",
          "modified": "2025-05-05",
          "version": "0.04"
        }
      ]
    }
  },
  "documentation": {
    "linkAKA": {
      "BROTLI": "RFC7932",
      "CBOR": "RFC8949",
      "CBOR Deterministic Encoding": "CBOR-LFD-ENCODING",
      "CBOR Encoded IPLD Content Identifier": "CBOR-TAG-42",
      "CDDL": "RFC8610",
      "COSE": "RFC9052",
      "COSE Header Parameters": "RFC9052-HeaderParameters",
      "COSE Sign": "RFC9052-CoseSign",
      "HTML": "HTML5",
      "IPFS CID": "IPFS-CID",
      "JSON": "RFC8259",
      "JSON Schema": "JSON Schema-2020-12",
      "JSON Schema Draft 2020-12": "JSON Schema-2020-12",
      "Markdown": "CommonMark",
      "RFC9165 - CDDL Additional Controls": "RFC9165",
      "URI": "RFC3986",
      "UTF-8": "RFC3629",
      "UUID": "RFC9562",
      "UUIDv4": "RFC9562-V4",
      "UUIDv7": "RFC9562-V7",
      "application/cddl": "RFC8610",
      "application/schema+json": "JSON Schema-2020-12",
      "charset=utf-8": "RFC3629",
      "charset=utf-8;": "RFC3629",
      "template=handlebars": "Handlebars",
      "text/css;": "text/css",
      "text/html;": "HTML5",
      "text/markdown;": "CommonMark",
      "text/plain;": "text/plain"
    },
    "links": {
      "CBOR-LFD-ENCODING": "https://www.rfc-editor.org/rfc/rfc8949.html#section-4.2.3",
      "CBOR-TAG-37": "https://github.com/lucas-clemente/cbor-specs/blob/master/uuid.md",
      "CBOR-TAG-42": "https://github.com/ipld/cid-cbor/",
      "CC-BY-4.0": "https://creativecommons.org/licenses/by/4.0/legalcode",
      "CSS": "https://www.w3.org/Style/CSS/",
      "CommonMark": "https://spec.commonmark.org/0.31.2/",
      "HTML5": "https://html.spec.whatwg.org/multipage/syntax.html#syntax",
      "Handlebars": "https://handlebarsjs.com/",
      "IPFS-CID": "https://docs.ipfs.tech/concepts/content-addressing/#what-is-a-cid",
      "JSON Schema-2020-12": "https://json-schema.org/draft/2020-12",
      "JSON Schema-draft7": "https://json-schema.org/draft-07",
      "Mustache": "https://mustache.github.io/mustache.5.html",
      "RFC3629": "https://datatracker.ietf.org/doc/html/rfc3629",
      "RFC3986": "https://datatracker.ietf.org/doc/html/rfc3986",
      "RFC7932": "https://www.rfc-editor.org/rfc/rfc7932",
      "RFC8259": "https://www.rfc-editor.org/rfc/rfc8259.html",
      "RFC8610": "https://www.rfc-editor.org/rfc/rfc8610",
      "RFC8949": "https://www.rfc-editor.org/rfc/rfc8949.html",
      "RFC9052": "https://datatracker.ietf.org/doc/html/rfc9052",
      "RFC9052-CoseSign": "https://datatracker.ietf.org/doc/html/rfc9052#name-signing-with-one-or-more-si",
      "RFC9052-HeaderParameters": "https://www.rfc-editor.org/rfc/rfc8152#section-3.1",
      "RFC9165": "https://www.rfc-editor.org/rfc/rfc9165",
      "RFC9562": "https://www.rfc-editor.org/rfc/rfc9562.html",
      "RFC9562-V4": "https://www.rfc-editor.org/rfc/rfc9562.html#name-uuid-version-4",
      "RFC9562-V7": "https://www.rfc-editor.org/rfc/rfc9562.html#name-uuid-version-7",
      "application/cbor": "https://www.iana.org/assignments/media-types/application/cbor",
      "application/json": "https://www.iana.org/assignments/media-types/application/json",
      "br": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding#br",
      "text/css": "https://www.rfc-editor.org/rfc/rfc2318.html",
      "text/plain": "https://www.rfc-editor.org/rfc/rfc2046.html"
    }
  },
  "encodingTypes": {
    "br": {
      "description": "BROTLI Compression"
    }
  },
  "formTemplate": {
    "dropDownSingleSelect": {
      "definition": {
        "contentMediaType": "text/plain",
        "pattern": "^[^\\n]*$",
        "type": "string"
      },
      "description": "UI - Drop Down Selection of a single entry from the defined enum.\n\nSelect one option from a selector styled as a dropdown menu.\nOnly one choice is allowed.",
      "parameters": {
        "description": {
          "description": "The description of the field presented during data entry.",
          "required": "optional",
          "type": "string"
        },
        "enum": {
          "description": "An array of string to select from.",
          "items": {
            "description": "An element of the Enum.",
            "required": "excluded",
            "type": "string"
          },
          "required": "yes",
          "type": "array"
        },
        "title": {
          "description": "The label attached to the field.",
          "required": "yes",
          "type": "string"
        },
        "x-guidance": {
          "description": "Long form Markdown formatted description to give guidance about how the field is to be completed.",
          "required": "optional",
          "type": "string"
        }
      },
      "parent": "section"
    },
    "multiLineTextEntry": {
      "definition": {
        "contentMediaType": "text/plain",
        "pattern": "^[\\S\\s]*$",
        "type": "string"
      },
      "description": "UI - One or more Lines of text entry.\nLine breaks, and special characters are allowed.\nSpecial formatted markup, such as Markdown are not allowed.\nEnter multiple lines of plain text. You can use line breaks but no special formatting.",
      "parameters": {
        "description": {
          "description": "The description of the field presented during data entry.",
          "required": "optional",
          "type": "string"
        },
        "maxLength": {
          "description": "Maximum number of characters allowed in the field.",
          "required": "yes",
          "type": "integer"
        },
        "minLength": {
          "description": "Minimum number of characters allowed in the field.",
          "required": "optional",
          "type": "integer"
        },
        "title": {
          "description": "The label attached to the field.",
          "required": "yes",
          "type": "string"
        },
        "x-guidance": {
          "description": "Long form Markdown formatted description to give guidance about how the field is to be completed.",
          "required": "optional",
          "type": "string"
        },
        "x-placeholder": {
          "description": "Placeholder text to display inside the field if it is empty.",
          "required": "optional",
          "type": "string"
        }
      },
      "parent": "section"
    },
    "multiLineTextEntryListMarkdown": {
      "definition": {
        "items": {
          "contentMediaType": "text/markdown",
          "minLength": 1,
          "pattern": "^[\\S\\s]*$",
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true
      },
      "description": "UI - A Growable List of markdown formatted text fields.\nEach entry is a multiline markdown formatted string.\nMarkdown Formatting, line breaks, or special characters are allowed.\nAdd multiple text entries.\nEach entry should be unique.",
      "parameters": {
        "contains": {
          "description": "The choices the multi select can contain.",
          "items": {
            "description": "An individual Choice.",
            "required": "excluded",
            "type": "string"
          },
          "required": "yes",
          "type": "array"
        },
        "default": {
          "description": "Default Array of text can be supplied.",
          "required": "optional",
          "type": "string"
        },
        "description": {
          "description": "The description of the field presented during data entry.",
          "required": "optional",
          "type": "string"
        },
        "maxItems": {
          "description": "An array instance is valid against \"maxItems\" if its size is less than, or equal to, the value of this keyword.",
          "required": "yes",
          "type": "integer"
        },
        "minItems": {
          "description": "An array instance is valid against \"minItems\" if its size is greater than, or equal to, the value of this keyword.",
          "required": "optional",
          "type": "integer"
        },
        "title": {
          "description": "The label attached to the field.",
          "required": "yes",
          "type": "string"
        },
        "x-guidance": {
          "description": "Long form Markdown formatted description to give guidance about how the field is to be completed.",
          "required": "optional",
          "type": "string"
        },
        "x-placeholder": {
          "description": "Placeholder text to display inside the field if it is empty.",
          "required": "optional",
          "type": "string"
        }
      },
      "parent": "section"
    },
    "multiLineTextEntryMarkdown": {
      "definition": {
        "contentMediaType": "text/markdown",
        "pattern": "^[\\S\\s]*$",
        "type": "string"
      },
      "description": "UI - Multiline text entry with Markdown content.\nUse Markdown formatting for rich text. \nMarkdown formatting is as defined by CommonMark.\n\nThe following Markdown Extensions are also supported:\n\n* None",
      "parameters": {
        "description": {
          "description": "The description of the field presented during data entry.",
          "required": "optional",
          "type": "string"
        },
        "maxLength": {
          "description": "Maximum number of characters allowed in the field.",
          "required": "yes",
          "type": "integer"
        },
        "minLength": {
          "description": "Minimum number of characters allowed in the field.",
          "required": "optional",
          "type": "integer"
        },
        "title": {
          "description": "The label attached to the field.",
          "required": "yes",
          "type": "string"
        },
        "x-guidance": {
          "description": "Long form Markdown formatted description to give guidance about how the field is to be completed.",
          "required": "optional",
          "type": "string"
        },
        "x-placeholder": {
          "description": "Placeholder text to display inside the field if it is empty.",
          "required": "optional",
          "type": "string"
        }
      },
      "parent": "section"
    },
    "multiSelect": {
      "definition": {
        "items": {
          "pattern": "^[^\\n]*$",
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true
      },
      "description": "UI - Multiselect from the given items.\n\nSelect multiple options from the dropdown menu.\nMultiple choices are allowed.\nAll choices MUST be unique.",
      "parameters": {
        "contains": {
          "description": "The choices the multi select can contain.",
          "items": {
            "description": "An individual Choice.",
            "required": "excluded",
            "type": "string"
          },
          "required": "yes",
          "type": "array"
        },
        "default": {
          "description": "Default selections can be supplied.",
          "required": "optional",
          "type": "string"
        },
        "description": {
          "description": "The description of the field presented during data entry.",
          "required": "optional",
          "type": "string"
        },
        "maxItems": {
          "description": "An array instance is valid against \"maxItems\" if its size is less than, or equal to, the value of this keyword.",
          "required": "yes",
          "type": "integer"
        },
        "minItems": {
          "description": "An array instance is valid against \"minItems\" if its size is greater than, or equal to, the value of this keyword.",
          "required": "optional",
          "type": "integer"
        },
        "title": {
          "description": "The label attached to the field.",
          "required": "yes",
          "type": "string"
        },
        "x-guidance": {
          "description": "Long form Markdown formatted description to give guidance about how the field is to be completed.",
          "required": "optional",
          "type": "string"
        }
      },
      "parent": "section"
    },
    "radioButtonSelect": {
      "definition": {
        "contentMediaType": "text/plain",
        "pattern": "^[^\\n]*$",
        "type": "string"
      },
      "description": "UI - Radio Button Selection.\n\nSelect one option from a list of text options.\nSelector is styled as a set of Radio Buttons.",
      "parameters": {
        "description": {
          "description": "The description of the field presented during data entry.",
          "required": "optional",
          "type": "string"
        },
        "enum": {
          "description": "An array of string to select from.",
          "items": {
            "description": "An element of the Enum.",
            "required": "excluded",
            "type": "string"
          },
          "required": "yes",
          "type": "array"
        },
        "title": {
          "description": "The label attached to the field.",
          "required": "yes",
          "type": "string"
        },
        "x-guidance": {
          "description": "Long form Markdown formatted description to give guidance about how the field is to be completed.",
          "required": "optional",
          "type": "string"
        }
      },
      "parent": "section"
    },
    "schemaReferenceNonUI": {
      "definition": {
        "readOnly": true,
        "type": "string"
      },
      "description": "Enforces the json document having a proper reference to the schema.",
      "parameters": {
        "const": {
          "description": "The path must always be this value. **MUST** match `default`.",
          "required": "yes",
          "type": "string"
        },
        "default": {
          "description": "The path that is defined to find the matching json schema.",
          "required": "yes",
          "type": "string"
        }
      },
      "parent": "section"
    },
    "section": {
      "definition": {
        "additionalProperties": false,
        "type": "object"
      },
      "description": "UI - Logical Document Sub-Section Break.\nSubsections containing specific details about the proposal.",
      "parameters": {
        "description": {
          "description": "The displayable description attached to the section.  Markdown formatted contents.",
          "required": "optional",
          "type": "string"
        },
        "properties": {
          "description": "The sub fields of the section.",
          "required": "yes",
          "type": "string"
        },
        "required": {
          "description": "Which fields MUST appear in the segment.",
          "required": "optional",
          "type": "string"
        },
        "title": {
          "description": "The title of the section.",
          "required": "yes",
          "type": "string"
        },
        "x-icon": {
          "choices": [
            "'all spaces menu'",
            "'all spaces menu-1'",
            "academic-cap",
            "ada",
            "adjustments",
            "annotation",
            "archive",
            "arrow-circle-down",
            "arrow-circle-left",
            "arrow-circle-right",
            "arrow-circle-up",
            "arrow-down",
            "arrow-left",
            "arrow-narrow-down",
            "arrow-narrow-left",
            "arrow-narrow-right",
            "arrow-narrow-up",
            "arrow-right",
            "arrow-triangle-down",
            "arrow-triangle-up",
            "arrow-up",
            "arrows-expand",
            "at-symbol",
            "avatar_placeholder",
            "backspace",
            "badge-check",
            "ban",
            "beaker",
            "bell",
            "book-open",
            "bookmark",
            "bookmark-alt",
            "bottom-main-content",
            "bottom-rail-toggle",
            "bottom-rail-toggle-1",
            "briefcase",
            "cake",
            "calculator",
            "calendar",
            "camera",
            "cash",
            "chart-bar",
            "chart-pie",
            "chart-square-bar",
            "chat",
            "chat-alt",
            "chat-alt-2",
            "check",
            "check-circle",
            "chevron-double-down",
            "chevron-double-left",
            "chevron-double-right",
            "chevron-double-up",
            "chevron-down",
            "chevron-down-1",
            "chevron-left",
            "chevron-right",
            "chevron-up",
            "chip",
            "clipboard",
            "clipboard-check",
            "clipboard-copy",
            "clipboard-list",
            "clock",
            "cloud",
            "cloud-download",
            "cloud-upload",
            "code",
            "cog-gear",
            "collection",
            "color-swatch",
            "credit-card",
            "cube",
            "cube-transparent",
            "currency-bangladeshi",
            "currency-dollar",
            "currency-euro",
            "currency-pound",
            "currency-rupee",
            "currency-yen",
            "cursor-click",
            "curved-arrow-right",
            "database",
            "desktop-computer",
            "device-mobile",
            "device-tablet",
            "document",
            "document-add",
            "document-remove",
            "document-report",
            "document-search",
            "document-text",
            "dots-circle-horizontal",
            "dots-horizontal",
            "dots-vertical",
            "double_check",
            "download",
            "duplicate",
            "emoji-happy",
            "emoji-sad",
            "exclamation",
            "exclamation-circle",
            "external-link",
            "eye",
            "eye-off",
            "facebook",
            "fast-forward",
            "film",
            "filter",
            "finger-print",
            "fire",
            "flag",
            "folder",
            "folder-add",
            "folder-download",
            "folder-open",
            "folder-remove",
            "fund",
            "gift",
            "globe",
            "globe-alt",
            "hand",
            "hashtag",
            "heart",
            "home",
            "icon-user-remove",
            "identification",
            "inbox",
            "inbox-in",
            "information-circle",
            "key",
            "left-rail-toggle",
            "library",
            "light-bulb",
            "lightning-bolt",
            "link",
            "linkedin",
            "location-marker",
            "lock-closed",
            "lock-open",
            "logout",
            "logout-1",
            "mail",
            "mail-open",
            "map",
            "maximize-toggle",
            "menu",
            "menu-alt-1",
            "menu-alt-2",
            "menu-alt-3",
            "menu-alt-4",
            "microphone",
            "minimize-toggle",
            "minus",
            "minus-circle",
            "moon",
            "move-item",
            "music-note",
            "newspaper",
            "node-closed",
            "node-line",
            "node-line-end",
            "node-open",
            "office-building",
            "paper-airplane",
            "paper-clip",
            "pause",
            "pencil",
            "pencil-alt",
            "phone",
            "phone-incoming",
            "phone-missed-call",
            "phone-outgoing",
            "photograph",
            "play",
            "plus",
            "plus_circle_filled",
            "plus_circle_outlined",
            "presentation-chart-bar",
            "presentation-chart-line",
            "printer",
            "progress-track-warning",
            "puzzle",
            "qrcode",
            "question-mark-circle",
            "receipt-refund",
            "receipt-tax",
            "reddit",
            "refresh",
            "reply",
            "rewind",
            "right-rail-toggle",
            "rss",
            "rt_bold",
            "rt_decrease_indent",
            "rt_heading",
            "rt_increase_indent",
            "rt_italic",
            "rt_ordered_list",
            "rt_unordered_list",
            "save",
            "save-as",
            "scale",
            "scissors",
            "search",
            "search-circle",
            "selector",
            "send-airplane",
            "server",
            "share",
            "shield-check",
            "shield-exclamation",
            "shopping-bag",
            "shopping-cart",
            "sm-view-grid-add",
            "sort-ascending",
            "sort-descending",
            "sparkles",
            "speakerphone",
            "star_filled",
            "star_outlined",
            "status-offline",
            "status-online",
            "stop",
            "summary",
            "sun",
            "support",
            "switch-horizontal",
            "switch-vertical",
            "table",
            "tag",
            "template",
            "terminal",
            "thumb-down",
            "thumb-up",
            "ticket",
            "top-bar",
            "top-bar-filled",
            "translate",
            "trash",
            "trending-down",
            "trending-up",
            "truck",
            "unlink",
            "upload",
            "user",
            "user-add",
            "user-circle",
            "user-group",
            "users",
            "variable",
            "video-camera",
            "view-boards",
            "view-grid",
            "view-list",
            "volume-off",
            "volume-up",
            "vote",
            "wallet",
            "wifi",
            "x",
            "x-circle",
            "xTwitter",
            "zoom-in",
            "zoom-out"
          ],
          "description": "The name of the Icon to display with the field.",
          "required": "optional",
          "type": "string"
        },
        "x-order": {
          "description": "The ordering of the properties to be enforced when displayed.\nAny field not listed here will get displayed in an arbitrary order.",
          "required": "yes",
          "type": "string"
        }
      },
      "parent": "segment"
    },
    "segment": {
      "definition": {
        "additionalProperties": false,
        "type": "object"
      },
      "description": "Logical Document Section - Grouping Only - Highest Level Group\n\"x-note\": \"\n\tMajor sections of the proposal. Each segment contains sections of information grouped together.\n\t\"",
      "parameters": {
        "description": {
          "description": "The displayable description attached to the segment.  Markdown formatted contents.",
          "required": "optional",
          "type": "string"
        },
        "properties": {
          "description": "The sub fields of the segment.",
          "required": "yes",
          "type": "string"
        },
        "required": {
          "description": "Which fields MUST appear in the segment.",
          "required": "optional",
          "type": "string"
        },
        "title": {
          "description": "The title of the segment.",
          "required": "yes",
          "type": "string"
        },
        "x-icon": {
          "choices": [
            "'all spaces menu'",
            "'all spaces menu-1'",
            "academic-cap",
            "ada",
            "adjustments",
            "annotation",
            "archive",
            "arrow-circle-down",
            "arrow-circle-left",
            "arrow-circle-right",
            "arrow-circle-up",
            "arrow-down",
            "arrow-left",
            "arrow-narrow-down",
            "arrow-narrow-left",
            "arrow-narrow-right",
            "arrow-narrow-up",
            "arrow-right",
            "arrow-triangle-down",
            "arrow-triangle-up",
            "arrow-up",
            "arrows-expand",
            "at-symbol",
            "avatar_placeholder",
            "backspace",
            "badge-check",
            "ban",
            "beaker",
            "bell",
            "book-open",
            "bookmark",
            "bookmark-alt",
            "bottom-main-content",
            "bottom-rail-toggle",
            "bottom-rail-toggle-1",
            "briefcase",
            "cake",
            "calculator",
            "calendar",
            "camera",
            "cash",
            "chart-bar",
            "chart-pie",
            "chart-square-bar",
            "chat",
            "chat-alt",
            "chat-alt-2",
            "check",
            "check-circle",
            "chevron-double-down",
            "chevron-double-left",
            "chevron-double-right",
            "chevron-double-up",
            "chevron-down",
            "chevron-down-1",
            "chevron-left",
            "chevron-right",
            "chevron-up",
            "chip",
            "clipboard",
            "clipboard-check",
            "clipboard-copy",
            "clipboard-list",
            "clock",
            "cloud",
            "cloud-download",
            "cloud-upload",
            "code",
            "cog-gear",
            "collection",
            "color-swatch",
            "credit-card",
            "cube",
            "cube-transparent",
            "currency-bangladeshi",
            "currency-dollar",
            "currency-euro",
            "currency-pound",
            "currency-rupee",
            "currency-yen",
            "cursor-click",
            "curved-arrow-right",
            "database",
            "desktop-computer",
            "device-mobile",
            "device-tablet",
            "document",
            "document-add",
            "document-remove",
            "document-report",
            "document-search",
            "document-text",
            "dots-circle-horizontal",
            "dots-horizontal",
            "dots-vertical",
            "double_check",
            "download",
            "duplicate",
            "emoji-happy",
            "emoji-sad",
            "exclamation",
            "exclamation-circle",
            "external-link",
            "eye",
            "eye-off",
            "facebook",
            "fast-forward",
            "film",
            "filter",
            "finger-print",
            "fire",
            "flag",
            "folder",
            "folder-add",
            "folder-download",
            "folder-open",
            "folder-remove",
            "fund",
            "gift",
            "globe",
            "globe-alt",
            "hand",
            "hashtag",
            "heart",
            "home",
            "icon-user-remove",
            "identification",
            "inbox",
            "inbox-in",
            "information-circle",
            "key",
            "left-rail-toggle",
            "library",
            "light-bulb",
            "lightning-bolt",
            "link",
            "linkedin",
            "location-marker",
            "lock-closed",
            "lock-open",
            "logout",
            "logout-1",
            "mail",
            "mail-open",
            "map",
            "maximize-toggle",
            "menu",
            "menu-alt-1",
            "menu-alt-2",
            "menu-alt-3",
            "menu-alt-4",
            "microphone",
            "minimize-toggle",
            "minus",
            "minus-circle",
            "moon",
            "move-item",
            "music-note",
            "newspaper",
            "node-closed",
            "node-line",
            "node-line-end",
            "node-open",
            "office-building",
            "paper-airplane",
            "paper-clip",
            "pause",
            "pencil",
            "pencil-alt",
            "phone",
            "phone-incoming",
            "phone-missed-call",
            "phone-outgoing",
            "photograph",
            "play",
            "plus",
            "plus_circle_filled",
            "plus_circle_outlined",
            "presentation-chart-bar",
            "presentation-chart-line",
            "printer",
            "progress-track-warning",
            "puzzle",
            "qrcode",
            "question-mark-circle",
            "receipt-refund",
            "receipt-tax",
            "reddit",
            "refresh",
            "reply",
            "rewind",
            "right-rail-toggle",
            "rss",
            "rt_bold",
            "rt_decrease_indent",
            "rt_heading",
            "rt_increase_indent",
            "rt_italic",
            "rt_ordered_list",
            "rt_unordered_list",
            "save",
            "save-as",
            "scale",
            "scissors",
            "search",
            "search-circle",
            "selector",
            "send-airplane",
            "server",
            "share",
            "shield-check",
            "shield-exclamation",
            "shopping-bag",
            "shopping-cart",
            "sm-view-grid-add",
            "sort-ascending",
            "sort-descending",
            "sparkles",
            "speakerphone",
            "star_filled",
            "star_outlined",
            "status-offline",
            "status-online",
            "stop",
            "summary",
            "sun",
            "support",
            "switch-horizontal",
            "switch-vertical",
            "table",
            "tag",
            "template",
            "terminal",
            "thumb-down",
            "thumb-up",
            "ticket",
            "top-bar",
            "top-bar-filled",
            "translate",
            "trash",
            "trending-down",
            "trending-up",
            "truck",
            "unlink",
            "upload",
            "user",
            "user-add",
            "user-circle",
            "user-group",
            "users",
            "variable",
            "video-camera",
            "view-boards",
            "view-grid",
            "view-list",
            "volume-off",
            "volume-up",
            "vote",
            "wallet",
            "wifi",
            "x",
            "x-circle",
            "xTwitter",
            "zoom-in",
            "zoom-out"
          ],
          "description": "The name of the Icon to display with the field.",
          "required": "optional",
          "type": "string"
        },
        "x-order": {
          "description": "The ordering of the properties to be enforced when displayed.\nAny field not listed here will get displayed in an arbitrary order.",
          "required": "yes",
          "type": "string"
        }
      },
      "parent": "{}"
    },
    "singleGroupedTagSelector": {
      "definition": {
        "additionalProperties": false,
        "required": [
          "group",
          "tag"
        ],
        "type": "object"
      },
      "description": "UI - A selector where a top level group selection, allows a single choice from a list of tags.\nSelect one option from the dropdown menu. \nOnly one choice is allowed.\n\nThe contents of the `singleGroupedTagSelector` *MUST* have the following format:\n\n```json\n\"oneOf\": [\n\t{\n\t\t\"properties\": {\n\t\t\t\"group\": {\n\t\t\t\t\"$ref\": \"#/definitions/tagGroup\",\n\t\t\t\t\"const\": \"Governance\"\n\t\t\t},\n\t\t\t\"tag\": {\n\t\t\t\t\"$ref\": \"#/definitions/tagSelection\",\n\t\t\t\t\"enum\": [\n\t\t\t\t\t\"Governance\",\n\t\t\t\t\t\"DAO\"\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t},\n```",
      "parameters": {
        "description": {
          "description": "The description of the field presented during data entry.",
          "required": "optional",
          "type": "string"
        },
        "oneOf_groupedTags": {
          "description": "A set of tags with a group selector.",
          "items": {
            "description": "\tAn array of grouped tag objects, of which one can be selected.\n\tEach object *MUST* have the form:\n\t\n\t```json\n\t\"properties\": {\n\t\t\"group\": {\n\t\t\t\"$ref\": \"#/definitions/tagGroup\",\n\t\t\t\"const\": <group name string>\n\t\t},\n\t\t\"tag\": {\n\t\t\t\"$ref\": \"#/definitions/tagSelection\",\n\t\t\t\"enum\": [\n\t\t\t\t<tag 1 string>,\n\t\t\t\t<tag 2 string>,\n\t\t\t\t...\n\t\t\t]\n\t\t}\n\t}\n\t```",
            "required": "excluded",
            "type": "object"
          },
          "property": "oneOf",
          "required": "excluded",
          "type": "array"
        },
        "title": {
          "description": "The label attached to the field.",
          "required": "yes",
          "type": "string"
        },
        "x-guidance": {
          "description": "Long form Markdown formatted description to give guidance about how the field is to be completed.",
          "required": "optional",
          "type": "string"
        }
      },
      "parent": "section"
    },
    "singleLineHttpsURLEntry": {
      "definition": {
        "format": "uri",
        "pattern": "^https://[^\\s]+$",
        "type": "string"
      },
      "description": "UI - Single Line text entry for HTTPS Urls.\n\"x-note\": \n\tMust start with 'https://' and is followed by one or more \n\tnon-whitespace characters, ending at the end of the string.\n\t",
      "parameters": {
        "description": {
          "description": "The description of the field presented during data entry.",
          "required": "optional",
          "type": "string"
        },
        "maxLength": {
          "description": "Maximum number of characters allowed in the field.",
          "required": "yes",
          "type": "integer"
        },
        "minLength": {
          "description": "Minimum number of characters allowed in the field.",
          "required": "optional",
          "type": "integer"
        },
        "title": {
          "description": "The label attached to the field.",
          "required": "yes",
          "type": "string"
        },
        "x-guidance": {
          "description": "Long form Markdown formatted description to give guidance about how the field is to be completed.",
          "required": "optional",
          "type": "string"
        },
        "x-placeholder": {
          "description": "Placeholder text to display inside the field if it is empty.",
          "required": "optional",
          "type": "string"
        }
      },
      "parent": "section"
    },
    "singleLineHttpsURLEntryList": {
      "definition": {
        "items": {
          "format": "uri",
          "minLength": 1,
          "pattern": "^https://[^\\s]+$",
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true
      },
      "description": "UI - A Growable List of single line text\nA single line of text.\nNo formatting, markup, line breaks, or special characters are allowed.\nAdd multiple single-line text entries.\nEach entry should be unique.",
      "parameters": {
        "contains": {
          "description": "The choices the multi select can contain.",
          "items": {
            "description": "An individual Choice.",
            "required": "excluded",
            "type": "string"
          },
          "required": "yes",
          "type": "array"
        },
        "default": {
          "description": "Default Array of URLs can be supplied.",
          "required": "optional",
          "type": "string"
        },
        "description": {
          "description": "The description of the field presented during data entry.",
          "required": "optional",
          "type": "string"
        },
        "maxItems": {
          "description": "An array instance is valid against \"maxItems\" if its size is less than, or equal to, the value of this keyword.",
          "required": "yes",
          "type": "integer"
        },
        "minItems": {
          "description": "An array instance is valid against \"minItems\" if its size is greater than, or equal to, the value of this keyword.",
          "required": "optional",
          "type": "integer"
        },
        "title": {
          "description": "The label attached to the field.",
          "required": "yes",
          "type": "string"
        },
        "x-guidance": {
          "description": "Long form Markdown formatted description to give guidance about how the field is to be completed.",
          "required": "optional",
          "type": "string"
        },
        "x-placeholder": {
          "description": "Placeholder text to display inside the field if it is empty.",
          "required": "optional",
          "type": "string"
        }
      },
      "parent": "section"
    },
    "singleLineTextEntry": {
      "definition": {
        "pattern": "^[^\\n]*$",
        "type": "string"
      },
      "description": "UI - Single Line text entry without any markup or rich text capability.\nA single line of text.\nNo formatting, markup, line breaks, or special characters are allowed.",
      "parameters": {
        "description": {
          "description": "The description of the field presented during data entry.",
          "required": "optional",
          "type": "string"
        },
        "maxLength": {
          "description": "Maximum number of characters allowed in the field.",
          "required": "yes",
          "type": "integer"
        },
        "minLength": {
          "description": "Minimum number of characters allowed in the field.",
          "required": "optional",
          "type": "integer"
        },
        "title": {
          "description": "The label attached to the field.",
          "required": "yes",
          "type": "string"
        },
        "x-guidance": {
          "description": "Long form Markdown formatted description to give guidance about how the field is to be completed.",
          "required": "optional",
          "type": "string"
        },
        "x-placeholder": {
          "description": "Placeholder text to display inside the field if it is empty.",
          "required": "optional",
          "type": "string"
        }
      },
      "parent": "section"
    },
    "singleLineTextEntryList": {
      "definition": {
        "items": {
          "minLength": 1,
          "pattern": "^[^\\n]*$",
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true
      },
      "description": "UI - A Growable List of single line text\nA single line of text.\nNo formatting, markup, line breaks, or special characters are allowed.\nAdd multiple single-line text entries.\nEach entry should be unique.",
      "parameters": {
        "contains": {
          "description": "The choices the multi select can contain.",
          "items": {
            "description": "An individual Choice.",
            "required": "excluded",
            "type": "string"
          },
          "required": "yes",
          "type": "array"
        },
        "default": {
          "description": "Default Array of text can be supplied.",
          "required": "optional",
          "type": "string"
        },
        "description": {
          "description": "The description of the field presented during data entry.",
          "required": "optional",
          "type": "string"
        },
        "maxItems": {
          "description": "An array instance is valid against \"maxItems\" if its size is less than, or equal to, the value of this keyword.",
          "required": "yes",
          "type": "integer"
        },
        "minItems": {
          "description": "An array instance is valid against \"minItems\" if its size is greater than, or equal to, the value of this keyword.",
          "required": "optional",
          "type": "integer"
        },
        "title": {
          "description": "The label attached to the field.",
          "required": "yes",
          "type": "string"
        },
        "x-guidance": {
          "description": "Long form Markdown formatted description to give guidance about how the field is to be completed.",
          "required": "optional",
          "type": "string"
        },
        "x-placeholder": {
          "description": "Placeholder text to display inside the field if it is empty.",
          "required": "optional",
          "type": "string"
        }
      },
      "parent": "section"
    }
  },
  "metadata": {
    "formats": {
      "Chain Link": {
        "cddl": "chain",
        "description": "A link to a previous document in a chained sequence."
      },
      "Collaborators Reference List": {
        "cddl": "collaborators",
        "description": "A list of collaborators who can participate in drafting and submitting a document"
      },
      "Document Id": {
        "cddl": "document_id",
        "description": "A unique document identifier"
      },
      "Document Reference": {
        "cddl": "document_refs",
        "description": "A document reference identifier"
      },
      "Document Type": {
        "cddl": "document_type",
        "description": "A document type identifier"
      },
      "Document Ver": {
        "cddl": "document_ver",
        "description": "A unique chronological document version"
      },
      "Section Reference": {
        "cddl": "section_ref",
        "description": "A document section reference identifier"
      },
      "UUIDv4": {
        "cddl": "uuid_v4",
        "description": "Version 4 formatted UUID"
      },
      "UUIDv7": {
        "cddl": "uuid_v7",
        "description": "Version 7 formatted UUID"
      },
      "Version Revocations": {
        "cddl": "revocations",
        "description": "A list of all versions of this document which are 'revoked'."
      }
    },
    "headers": {
      "chain": {
        "description": "An immutable link to the previous document in a chained sequence of documents.\nBecause ID/Ver only defines values for the current document, and is not intended \nby itself to prevent insertion of documents in a sequence, the `chain`\nmetadata allows for the latest document to directly point to its previous iteration.\n\nIt also aids in discoverability, where the latest document may be pinned but prior\ndocuments can be discovered automatically by following the chain.",
        "format": "Chain Link",
        "required": "optional",
        "validation": "Chained Documents do not support collaborators.\nAny document which is attempted to be published in the sequence\nwhich is *NOT* published by the author of the first document in the\nsequence is fraudulent, and to be discarded.\n\nIn addition, the chained document *MUST*:\n\n* Not have `collaborators`;\n* Have the same `id` as the document being chained to;\n* Have a `ver` that is greater than the `ver` being chained to;\n* Have the same `type` as the chained document;\n* Have `parameters` match;\n* Have not be chaining to a document already chained to by another document;\n* Have its absolute `height` exactly one more than the `height` of the document being chained to.\n\nIF any of these validations fail, then the entire sequence of documents is INVALID.\nNot just the current document.\n\n##### Example of a Valid Chain\n\n<!-- markdownlint-disable MD046 -->\n``` mermaid\nclassDiagram\n    direction LR\n    class Last {\n        type: \"=Intermediate.Document Type\"\n        id: \"=Intermediate.Document ID\"\n        ver: \">Intermediate.Document ID\"\n        parameters: \"=Intermediate.Document Parameters\"\n        chain.height: -2\n        chain.document_ref: \"=Intermediate\"\n\n        author(Intermediate.Catalyst ID)\n    }\n    style Last stroke:#060,stroke-width:4px\n\n    class Intermediate {\n        type: \"=First.Document Type\"\n        id: \"=First.Document ID\"\n        ver: \">First.Document ID\"\n        parameters: \"=First.Document Parameters\"\n        chain.height: 1\n        chain.document_ref: \"=First\"\n\n        author(First.Catalyst ID)\n    }\n    style Intermediate stroke:#060,stroke-width:4px\n\n    class First {\n        type: \"Document Type\"\n        id: \"Document ID\"\n        ver: \"=Document ID\"\n        parameters: \"Document Parameters\"\n        chain.height: 0\n        chain.document_ref: None\n\n        author(Catalyst ID)\n    }\n    style First stroke:#060,stroke-width:4px\n\n    Last --|> Intermediate : chains to\n    Intermediate --|> First : chains to\n\n\n```\n<!-- markdownlint-enable MD046 -->\n\n##### Example of an Invalid Chain\n\nEither of the two documents being present invalidates the data\nin the entire chain,\nas they are signed by the author of the chain.\n\n<!-- markdownlint-disable MD046 -->\n``` mermaid\nclassDiagram\n    direction LR\n\n    class Last {\n        type: \"=Intermediate.Document Type\"\n        id: \"=Intermediate.Document ID\"\n        ver: \">Intermediate.Document ID\"\n        parameters: \"=Intermediate.Document Parameters\"\n        chain.height: -2\n        chain.document_ref: \"=Intermediate\"\n\n        author(Intermediate.Catalyst ID)\n    }\n    style Last stroke:#f60,stroke-width:4px\n\n    class Intermediate {\n        type: \"=First.Document Type\"\n        id: \"=First.Document ID\"\n        ver: \">First.Document ID\"\n        parameters: \"=First.Document Parameters\"\n        chain.height: 1\n        chain.document_ref: \"=First\"\n\n        author(First.Catalyst ID)\n    }\n    style Intermediate stroke:#f60,stroke-width:4px\n\n    class First {\n        type: \"Document Type\"\n        id: \"Document ID\"\n        ver: \"=Document ID\"\n        parameters: \"Document Parameters\"\n        chain.height: 0\n        chain.document_ref: None\n\n        author(Catalyst ID)\n    }\n    style First stroke:#f60,stroke-width:4px\n\n    Last --|> Intermediate : chains to\n    Intermediate --|> First : chains to\n\n    class Invalid_Chain {\n        type: \"=First.Document Type\"\n        id: \"=First.Document ID\"\n        ver: \">Intermediate.Document ID\"\n        parameters: \"=First.Document Parameters\"\n        chain.height: 1\n        chain.document_ref: \"=First\"\n\n        author(First.Catalyst ID)\n    }\n\n    Invalid_Chain --|> First : Invalidly chains to\n    style Invalid_Chain fill:#100,stroke:#f00,stroke-width:4px\n\n\n    class After_Final {\n        type: \"=Final.Document Type\"\n        id: \"=Final.Document ID\"\n        ver: \">Final.Document ID\"\n        parameters: \"=Final.Document Parameters\"\n        chain.height: 3\n        chain.document_ref: \"=Last\"\n\n        author(Last.Catalyst ID)\n    }\n\n    After_Final --|> Last : Invalidly chains to\n    style After_Final fill:#100,stroke:#f00,stroke-width:4px\n\n```\n<!-- markdownlint-enable MD046 -->\n\n##### Example of a Fraudulent Chain Document\n\nThe invalid document does not invalidate the chain,\nas its not signed by the author of the chained documents.\n\n<!-- markdownlint-disable MD046 -->\n``` mermaid\nclassDiagram\n    direction LR\n    class Last {\n        type: \"=Intermediate.Document Type\"\n        id: \"=Intermediate.Document ID\"\n        ver: \">Intermediate.Document ID\"\n        parameters: \"=Intermediate.Document Parameters\"\n        chain.height: -2\n        chain.document_ref: \"=Intermediate\"\n\n        author(Intermediate.Catalyst ID)\n    }\n    style Last stroke:#060,stroke-width:4px\n\n    class Intermediate {\n        type: \"=First.Document Type\"\n        id: \"=First.Document ID\"\n        ver: \">First.Document ID\"\n        parameters: \"=First.Document Parameters\"\n        chain.height: 1\n        chain.document_ref: \"=First\"\n\n        author(First.Catalyst ID)\n    }\n    style Intermediate stroke:#060,stroke-width:4px\n\n    class First {\n        type: \"Document Type\"\n        id: \"Document ID\"\n        ver: \"=Document ID\"\n        parameters: \"Document Parameters\"\n        chain.height: 0\n        chain.document_ref: None\n\n        author(Catalyst ID)\n    }\n    style First stroke:#060,stroke-width:4px\n\n    Last --|> Intermediate : chains to\n    Intermediate --|> First : chains to\n\n    class Rejected {\n        type: \"=First.Document Type\"\n        id: \"=First.Document ID\"\n        ver: \">Intermediate.Document ID\"\n        parameters: \"=Intermediate.Document Parameters\"\n        chain.height: 1\n        chain.document_ref: \"=First\"\n\n        author(Other.Catalyst ID)\n    }\n\n    Rejected --|> Intermediate : Invalidly chains to\n    style Rejected fill:#100,stroke:#f00,stroke-width:4px    \n\n```\n<!-- markdownlint-enable MD046 -->"
      },
      "collaborators": {
        "description": "A list of collaborators who may also publish updates to versions of this document.\nThis should include all parties who have not signed this document directly.\n\nEvery subsequent version can amend the collaborators list.\nHowever, the initial Author can never be removed from being able to\npublish a new version of the document.",
        "format": "Collaborators Reference List",
        "required": "optional",
        "validation": "This list does not imply these collaborators have consented to collaborate, only that the author/s\nare permitting these potential collaborators to participate in the drafting and submission process.\nHowever, any document submission referencing a proposal MUST be signed by all collaborators in\naddition to the author."
      },
      "id": {
        "description": "Document ID, created the first time the document is created.\nThis must be a properly created UUIDv7 which contains the \ntimestamp of when the document was created.",
        "format": "Document Id",
        "required": "yes",
        "validation": "IF `ver` does not == `id` then a document with \n`id` and `ver` being equal *MUST* exist."
      },
      "parameters": {
        "description": "A reference to the Parameters Document this document lies under.",
        "format": "Document Reference",
        "linked_refs": null,
        "multiple": false,
        "required": "optional",
        "type": [
          "Brand Parameters",
          "Campaign Parameters",
          "Category Parameters",
          "Contest Parameters"
        ],
        "validation": "In addition to the validation performed for `Document Reference` type fields: \n\n* Any linked referenced document that includes a `parameters` metadata must match the \n`parameters` of the referencing document,\nor a parent of those `parameters`.\n\nFor example, a linked reference to `Contest Parameters` is transitively a reference to\nthe Parameters document it references, and each parameters document they reference \nuntil the `Brand` parameters document is reached.\n\nThe use case here is for Templates.\nThe profile template, or proposal templates could be defined at any of these\nlevels, and as long as they all refer to the same chain of parameters in the\nhierarchy they are all valid."
      },
      "ref": {
        "description": "Reference to a Linked Document or Documents.  \nThis is the primary hierarchical reference to a related document.\t\t\t\n\nIf a reference is defined as required, there must be at least 1 reference specified.\nSome documents allow multiple references, and they are documented as required.\n\nThe document reference serves two purposes:\n  \n1. It ensures that the document referenced by an ID/Version is not substituted.\n\tIn other words, that the document intended to be referenced, is actually referenced.\n2. It Allows the document to be unambiguously located in decentralized storage systems.\n\nThere can be any number of Document Locations in any reference.\nThe currently defined locations are:\n\n* `cid` : A CBOR Encoded IPLD Content Identifier ( AKA an IPFS CID ).\n* Others may be added when further storage mechanisms are defined.\n\nThe document location does not guarantee that the document is actually stored.\nIt only defines that if it were stored, this is the identifier\nthat is required to retrieve it.\nTherefore it is required that Document References\nare unique and reproducible, given a documents contents.",
        "format": "Document Reference",
        "linked_refs": null,
        "multiple": false,
        "required": "optional",
        "type": [
          "Proposal Form Template",
          "Proposal Presentation Template",
          "Proposal",
          "Proposal Comment Form Template",
          "Proposal Comment Presentation Template",
          "Proposal Comment",
          "Proposal Submission Action",
          "Proposal Moderation Action",
          "Comment Moderation Action",
          "Brand Parameters",
          "Brand Parameters Form Template",
          "Campaign Parameters",
          "Campaign Parameters Form Template",
          "Category Parameters",
          "Category Parameters Form Template",
          "Contest Parameters",
          "Contest Parameters Form Template",
          "Rep Profile",
          "Rep Profile Form Template",
          "Rep Nomination",
          "Rep Nomination Form Template",
          "Contest Delegation"
        ],
        "validation": "The following must be true for a valid reference:\n\n* The Referenced Document **MUST** Exist\n* Every value in the `document_locator` must consistently reference the exact same document.\n* The `document_id` and `document_ver` **MUST** match the values in the referenced document."
      },
      "reply": {
        "description": "Reference to a Comment document type being referred to.",
        "format": "Document Reference",
        "linked_refs": null,
        "multiple": false,
        "required": "optional",
        "type": [
          "Proposal Comment"
        ],
        "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe `ref` of the `reply` document must be the same as\nthe original comment document."
      },
      "revocations": {
        "description": "A document may include a list of any prior versions which are considered to be revoked.\nOnly the revocation list in the latest version of the document applies.\nRevoked documents are flagged as no longer valid, and should not be displayed.\nAs a special case, if the revocations are set to `true` then all versions of the document\nare revoked, including the latest document.\n\nIn this case, when the latest document is revoked, the payload may be empty.\nAny older document that has `revocations` set to `true` is always to be filtered\nand its payload is to be assumed to be invalid.\n\nThis allows for an entire document and any/all published versions to be revoked.\nA new version of the document that is published after this, may reinstate prior\ndocument versions, by not listing them as revoked.  \nHowever, any document where revocations was set `true` can never be reinstated.",
        "format": "Version Revocations",
        "required": "excluded",
        "validation": "If the field is `true` the payload may be absent or invalid.\nSuch documents may never be submitted."
      },
      "section": {
        "description": "A Reference to the original document, or the comment being replied to.",
        "format": "Section Reference",
        "required": "optional",
        "validation": "For a non-reply this must be a valid section reference into the referenced document.\nFor a reply, this must be a valid section reference into the comment being replied to."
      },
      "template": {
        "description": "Reference to the template used to create and/or validate this document.",
        "format": "Document Reference",
        "linked_refs": null,
        "multiple": false,
        "required": "optional",
        "type": [
          "Proposal Form Template",
          "Proposal Comment Form Template",
          "Brand Parameters Form Template",
          "Campaign Parameters Form Template",
          "Category Parameters Form Template",
          "Contest Parameters Form Template",
          "Rep Profile Form Template",
          "Rep Nomination Form Template"
        ],
        "validation": "In addition to the validation performed for `Document Reference` type fields, \nThe document payload is not valid if it does not validate completely against the referenced template."
      },
      "type": {
        "description": "The document TYPE.",
        "format": "Document Type",
        "required": "yes",
        "validation": "**MUST** be a known document type."
      },
      "ver": {
        "description": "The unique version of the document.\nThe first version of the document must set `ver` == `id`\n\n`ver` represents either:\n\n* when a document changes over time, such as\n\twith a new version of a particular document that supersedes an \n\tearlier one.\n* when a new document in a sequence of documents is produced.\n\t\nBecause the most common use `ver` is a new version of the same document\nthis is to be assumed unless the document specifies its representing\na sequence of documents.",
        "format": "Document Ver",
        "required": "yes",
        "validation": "The document version must always be >= the document ID."
      }
    },
    "order": [
      "type",
      "id",
      "ver",
      "ref",
      "template",
      "reply",
      "section",
      "collaborators",
      "revocations",
      "parameters",
      "chain"
    ]
  }
}
